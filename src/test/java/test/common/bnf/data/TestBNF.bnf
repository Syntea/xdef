Char ::= $xmlChar
WhiteSpace ::= $whitespace
Comment ::= "/*" ( [^*]+ | "*" [^/] )* "*/"
S ::= ( WhiteSpace | Comment )+
Letter ::= $letter
Digit ::= [0-9]

BaseIdentifier ::= (( Letter | "_" | "$")  ( Letter | Digit | "_" )*)

Identifier ::= (BaseIdentifier ( ':' BaseIdentifier)? )

RawIdentifier ::= ( Letter | "_")  ( Letter | Digit | "_" )*

QualifiedIdentifier ::= BaseIdentifier ( '.' BaseIdentifier )*

HexaDigit ::= Digit | [a-fA-F]

/***************************************************************************** 
 * BNF grammar
 ******************************************************************************/

BNFGrammar ::= S? BNFMethodDeclarationSection? S? BNFRules S?

BNFMethodDeclarationSection ::= BNFMethodDeclaration (S? BNFMethodDeclaration)*

BNFRuleName ::= RawIdentifier

BNFExternalRuleName ::= "$" (BNFRuleName | Digit*)

BNFRuleReference ::= BNFExternalRuleName | BNFRuleName

BNFMethodDeclaration ::= "%define" S BNFExternalRuleName S ":"
 S "$" QualifiedIdentifier BNFMethodparameters?

BNFMethodparameters ::= "(" S? BNFMethodparameter
 (S? "," S? BNFMethodparameter)* S? ")"

BNFMethodparameter ::= Digit+ | BNFTerminalSymbol

BNFTerminalSymbol ::= "'" (Char - "'")* "'" | '"' (Char - '"')* '"' 
  | BNFHexaChracter (S? BNFHexaChracter)*

BNFHexaChracter ::= "#x" HexaDigit+

BNFRules ::= BNFRule (S BNFRule)*

BNFRule ::= BNFRuleName S? "::=" S? BNFExpression

BNFQuantificator ::= S? ("+" | "*" | "?" | BNFExplicitQuantificator)

BNFExplicitQuantificator ::= "{" S? Digit+ (S? "," S? Digit+)? S? "}" 

BNFExpression ::= "(" S? BNFExpression  S? ")" (S? BNFQuantificator)?
  | BNFRestriction | BNFSelection | BNFSequence 

BNFSet ::= "[" BNFSetBody "]"

BNFSetBody ::= ("^"? Char - "]")+

BNFTerm ::= (BNFTerminalSymbol | BNFSet | BNFRuleReference)
  (S? BNFQuantificator)?

BNFSequence ::= BNFTerm ( S (BNFExpression - BNFRule) )*

BNFRestriction ::= BNFTerm S? "-" S? (BNFExpression - BNFRule)

BNFSelection ::= BNFTerm ( S? "|" S? (BNFExpression - BNFRule) )+

/***************************************************************************** 
* XComponent
******************************************************************************/

XCComponent ::= ( S? XCComponentCommand )* S?

XCComponentCommand ::= ( XCBind | XCClass | XCEnum | XCInterface | XCRef ) S? ";"

XCBind ::= "%bind" S Identifier ( S "%with" S $JavaQName )? S XCLink

XCClass ::= "%class" S $JavaQName (S "extends" S $JavaQName )?
  (S "implements" S $JavaQName (S? "," S? $JavaQName)*)?
  (S "%interface" S $JavaQName)?
  S XCLink

XCEnum ::= "%enum" S $JavaQName S (Identifier? "#")? Identifier

XCInterface ::= "%interface" S $JavaQName S XCLink

XCRef ::= "%ref" S $JavaQName S S $JavaQName S XCLink

XCLink ::= "%link" S XPosition

XPosition ::= ( ("#" | Identifier "#")? Identifier
  ( "/" Identifier ("[" Digit+ "]")? )* ( ("[" Digit+ "]")? "/@" Identifier)? )
  | "*" /*any*/
