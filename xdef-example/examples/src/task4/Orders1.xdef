<xd:def xmlns:xd="http://www.xdef.org/xdef/3.2" name="Orders" root="Orders">

<xd:declaration>
  external Element products, /* information about products. */
    customers; /* information about customers. */
  external XmlOutStream output; /* Output stream (set by the external program). */

  Container c; /* information about customer created by the method "customer". */
  int errors = 0, errorsOld = 0, errorsOld1 = 0, count = 0; /* counters */

  /* Check customer code */
  boolean customer() {
    String s = getText(); /* get attribute value. */
    c = xpath('Customer[@CustomerCode="' + s + '"]', customers); /* Find the customer. */
    /* Check if the customer found */
    if (c.getLength()==0) {
      /* Customer not found, increase error counter and report an error. */
      errors++;
      return error("Incorrect customer code: " + s); /* sets error message and returns false. */
    }
    return true; /* Customer found, OK */
  }

  /* Check the item code */
  boolean item() {
      String s = getText(); /* get attribute value. */
      /* Find the description of the item. */
      Container c = xpath('Product[@Code="' + s + '"]', products);
      if (c.getLength()==0) { /* Item found? */
        /* Item not found, increase the error counter and report error. */
        errors++;
        return error("Incorrect item number: " + s);
      }
      return true; /* Item was found, OK */
  }

  /* Write order. */
  void writeObj() {
    if (errors != errorsOld || errorsOld1 != errors()) {
      /* An error occured */
      errorsOld = errors; /* save the counter to "errorsOld"; write nothing. */
      errorsOld1 = errors();
    } else {
      /* Is it the first record? */
      if (count++ == 0) {
         /* nothing was written yet, write XML header and root element. */
         output.setIndenting(true); /* set output indentation. */
         output.writeElementStart(getRootElement());
      }
      /* Create object from the context with the actual order and write it. */
      output.writeElement(xcreate('Order', getElement()));
    }
  }

  /* Close output. */
  void closeAll() {
    /* Something was written?. */
    if (count != 0) {
      /* yes, close output. */
      output.close();
    }
  }

  /* Calculate the total cost of the item of a order. */
  float price() {
    /* Get quantity */
    int number = parseInt(xpath("@Quantity")); /* Get quantity from the input data. */
    String code = from("@ProductCode"); /* Get commodity code from the input data. */
    /* Find the product (we already know that it exists - see customer()). */
    Element el1 = xpath('Product[@Code="' + code + '"]', products).getElement(0);
    float price = parseFloat(el1.getAttr("Price")); /* get price of one product. */
    return price * number; /* Compute total cost and return it. */
  }
  uniqueSet checkObjId int();
</xd:declaration>

<Orders xd:script="finally output.close();" id="string(9)">
  <Order xd:script="occurs +; finally writeObj(); forget"
      Number="checkObjId.ID()"
      CustomerCode="customer()">
    <Item xd:script="occurs 1..100;" ProductCode="item()" Quantity="int"/>
  </Order>
</Orders>

<Order Number="string" CustomerCode="string">
  <DeliveryPlace xd:script="create c" >
    <Address Street="string(2,100)"
      House="int(1,9999)"
      City="string(2,100)"
      ZIP="num(5)"/>
  </DeliveryPlace>
  <Item xd:script="occurs 1..100;"
    ProductCode="string();"
    Quantity="int();"
    Price="float; create price();" />
</Order>

</xd:def>