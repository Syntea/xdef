// This file was generated by org.xdef.component.GenXComponent.
// XDPosition: "A#A".
// Any modifications to this file will be lost upon recompilation.
package bugreports.data;
public class A extends bugreports.data.C implements org.xdef.component.XComponent{
  public String getc() {return _c;}
  public C.D getD() {return _D;}
  public A.X getX() {return _X;}
  public void setc(String x){_c=x;}
  public void setD(C.D x){_D=x;}
  public void setX(A.X x){_X=x;}
  public String xposOfc(){return XD_XPos+"/@c";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.List<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	org.xdef.component.XComponentUtil.addXC(a, getD());
	org.xdef.component.XComponentUtil.addXC(a, getX());
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	  if (doc.getDocumentElement()==null) doc.appendChild(el);
	}
	if (getc() != null)
	  el.setAttribute(XD_Name_c, getc());
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public A() {}
  public A(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public A(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"C3550FFD030896CB76A94489ACF79BC5".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String XD_Name_c="c";
  private String _c;
  private C.D _D;
  private A.X _X;
  public static final String XD_NAME="A";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "A";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="A#A";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	XD_Name_c = x.getNodeName();
	setc(parseResult.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x) {
	String s = x.getXMElement().getXDPosition();
	if ("A#C/D".equals(s))
	  return new bugreports.data.C.D(this, x);
	return new X(this, x); // A#A/X
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){
	x.xSetNodeIndex(XD_ndx++);
	String s = x.xGetModelPosition();
	if ("A#C/D".equals(s))
	  setD((bugreports.data.C.D)x);
	else
	  setX((X)x); //A#A/X
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class X implements org.xdef.component.XComponent{
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 1;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<org.xdef.component.XComponent>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	return doc!=null ? doc.createElementNS(XD_NamespaceURI, XD_NodeName)
	  : org.xdef.xml.KXmlUtils.newDocument(
		XD_NamespaceURI, XD_NodeName, null).getDocumentElement();
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public X() {}
  public X(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public X(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"F8D4905E275D2BFE1F9FBB6776F0EE22".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="X";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "X";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="A#A/X";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}