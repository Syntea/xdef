// This file was generated by org.xdef.component.GenXComponent.
// X-position: "#A".
// Any modifications to this file will be lost upon recompilation.
package bugreports;
public class MytestX_CHK implements org.xdef.component.XComponent{
  public Integer geta() {return _a;}
  public Integer getb() {return _b;}
  public String getc() {return _c;}
  public Float getd() {return _d;}
  public void seta(Integer x) {_a=x;}
  public void setb(Integer x) {_b=x;}
  public void setc(String x) {_c=x;}
  public void setd(Float x) {_d=x;}
  public String xposOfa(){return XD_XPos+"/@a";}
  public String xposOfb(){return XD_XPos+"/@b";}
  public String xposOfc(){return XD_XPos+"/@c";}
  public String xposOfd(){return XD_XPos+"/@d";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_a="a";
  private Integer _a;
  private String XD_Name_b="b";
  private Integer _b;
  private String XD_Name_c="c";
  private String _c;
  private String XD_Name_d="d";
  private Float _d;
  @Override
  public Object toXon() {return org.xdef.component.XComponentUtil.toXon(this);}
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  public final static byte XON = 0;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	  if (doc.getDocumentElement()==null) doc.appendChild(el);
	}
	if (geta() != null)
	  el.setAttribute(XD_Name_a, geta().toString());
	if (getb() != null)
	  el.setAttribute(XD_Name_b, getb().toString());
	if (getc() != null)
	  el.setAttribute(XD_Name_c, getc());
	if (getd() != null)
	  el.setAttribute(XD_Name_d, getd().toString());
	return el;
  }
  public MytestX_CHK() {}
  public MytestX_CHK(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public MytestX_CHK(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"5B9EAFA75E8D9EAE140615F8EDFD6EB5ABAEF628E39AAAED7CC4E1D8B2343DA1".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="A";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "A";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value) {
	if (x.getXMNode().getXDPosition().endsWith("/@a")) {
	  XD_Name_a = x.getNodeName();
	  seta(value.getParsedValue().isNull()? null: value.getParsedValue().intValue());
	} else if (x.getXMNode().getXDPosition().endsWith("/@b")) {
	  XD_Name_b = x.getNodeName();
	  setb(value.getParsedValue().isNull()? null: value.getParsedValue().intValue());
	} else if (x.getXMNode().getXDPosition().endsWith("/@c")) {
	  XD_Name_c = x.getNodeName();
	  setc(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
	} else {
	  XD_Name_d = x.getNodeName();
	  setd(value.getParsedValue().isNull()? null: value.getParsedValue().floatValue());
	}
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
	@Override
	public Object xGet(String name) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	@Override
	public void xSet(String name, Object value) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
}