// This file was generated by org.xdef.component.GenXComponent.
// X-position: "x#testX".
// Any modifications to this file will be lost upon recompilation.
package bugreports;
public class MyTestX_AnyXXx implements org.xdef.component.XComponent{
  public MyTestX_AnyXXx.jx$map getjx$map() {return _jx$map;}
  public MyTestX_AnyXXx.jx$array getjx$array() {return _jx$array;}
  public MyTestX_AnyXXx.jx$item getjx$item() {return _jx$item;}
  public Object getAnyObj$(){return toXon();}
  public void setjx$map(MyTestX_AnyXXx.jx$map x) {
    _jx$array=null;_jx$item=null;
    _jx$map=x;
  }
  public void setjx$array(MyTestX_AnyXXx.jx$array x) {
    _jx$map=null;_jx$item=null;
    _jx$array=x;
  }
  public void setjx$item(MyTestX_AnyXXx.jx$item x) {
    _jx$map=null;_jx$array=null;
    _jx$item=x;
  }
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private MyTestX_AnyXXx.jx$item _jx$item;
  private MyTestX_AnyXXx.jx$array _jx$array;
  private MyTestX_AnyXXx.jx$map _jx$map;
  @Override
  public Object toXon() {
    if (_jx$array != null) return _jx$array.toXon();
    if (_jx$map != null) return _jx$map.toXon();
    return _jx$item != null? _jx$item.toXon(): null;
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, getjx$item());
    org.xdef.component.XComponentUtil.addXC(a, getjx$array());
    org.xdef.component.XComponentUtil.addXC(a, getjx$map());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
      if (doc.getDocumentElement()==null) doc.appendChild(el);
    }
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public MyTestX_AnyXXx() {}
  public MyTestX_AnyXXx(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public MyTestX_AnyXXx(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"9D7AC0CF104406230598356F1511156B2DF0687B7356B6D296B850FB227358CA".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="testX";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "testX";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="x#testX";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
    String s = x.getXMElement().getXDPosition();
    if ("x#testX/$choice/jx:item".equals(s))
      return new jx$item(this, x);
    if ("x#testX/$choice/jx:array".equals(s))
      return new jx$array(this, x);
    return new jx$map(this, x); // x#testX/$choice/jx:map
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    String s = x.xGetModelPosition();
    if ("x#testX/$choice/jx:item".equals(s))
      setjx$item((jx$item)x);
    else if ("x#testX/$choice/jx:array".equals(s))
      setjx$array((jx$array)x);
    else
      setjx$map((jx$map)x); //x#testX/$choice/jx:map
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class jx$item implements org.xdef.component.XComponent{
  public Object getval() {return _val;}
  public void setval(Object x) {_val=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private Object _val;
  @Override
  public Object toXon() {
    Object o = getval();
    return (o instanceof org.xdef.xon.XonTools.JNull)? null
      : o instanceof String? org.xdef.xon.XonTools.xmlToJValue((String) o): o;
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 1;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    if (getval() != null)
      el.setAttribute(XD_Name_val, getval().toString());
    return el;
  }
  public jx$item() {}
  public jx$item(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"73A34EB5A4971ADD9A685F46B77C67DE70BEE49CA4B761A74F2053988AB5F613".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="x#testX/$choice/jx:item";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
    XD_Name_val = x.getNodeName();
    setval(value.getParsedValue().getObject());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class jx$array implements org.xdef.component.XComponent{
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> listOfjx$map() {
    return _jx$map;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> listOfjx$array() {
    return _jx$array;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> listOfjx$item() {
    return _jx$item;
  }
  public Object getAnyObj$(){return toXon();}
  public java.util.List<Object> getArray$() {return toXon();}
  public void addjx$map(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map x) {
    _jx$array.clear();_jx$item.clear();
    if (x!=null) _jx$map.add(x);
  }
  public void addjx$array(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1 x) {
    _jx$map.clear();_jx$item.clear();
    if (x!=null) _jx$array.add(x);
  }
  public void addjx$item(bugreports.MyTestX_AnyXXx.jx$array.jx$item x) {
    _jx$map.clear();_jx$array.clear();
    if (x!=null) _jx$item.add(x);
  }
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> _jx$item = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> _jx$array = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> _jx$map = new java.util.ArrayList<>();
  @Override
  public java.util.List<Object> toXon(){
    return org.xdef.component.XComponentUtil.toXonArray(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 2;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$item());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$array());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$map());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public jx$array() {}
  public jx$array(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$array(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"A41194C04378EBC95D7D74223B0B8F86333B8EE15FACD48FF33A15B69CABC2D5".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:array";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:array";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="x#testX/$choice/jx:array";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
    String s = x.getXMElement().getXDPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      return new jx$item(this, x);
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      return new jx$array_1(this, x);
    return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map(this, x); // x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    String s = x.xGetModelPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      listOfjx$item().add((jx$item)x);
    else if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      listOfjx$array().add((jx$array_1)x);
    else
      listOfjx$map().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map)x); //x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class jx$item implements org.xdef.component.XComponent{
  public String getkey() {return _key;}
  public Object getval() {return _val;}
  public void setkey(String x) {_key=x;}
  public void setval(Object x) {_val=x;}
  public String xposOfkey(){return XD_XPos+"/@key";}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_key="key";
  private String _key;
  private String XD_Name_val="val";
  private Object _val;
  @Override
  public Object toXon() {
    Object o = getval();
    return (o instanceof org.xdef.xon.XonTools.JNull)? null
      : o instanceof String? org.xdef.xon.XonTools.xmlToJValue((String) o): o;
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 1;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    if (getkey() != null)
      el.setAttribute(XD_Name_key, getkey());
    if (getval() != null)
      el.setAttribute(XD_Name_val, getval().toString());
    return el;
  }
  public jx$item() {}
  public jx$item(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"E6F34A7FF1AA60DC71DBEEC74DA53913CA70F6D1D678745DF0AD6D5CBC76D75A".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="x#JSON.ANYOBJECT$choice/$choice/jx:item";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value) {
    if (x.getXMNode().getXDPosition().endsWith("/@key")) {
      XD_Name_key = x.getNodeName();
      setkey(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
    } else {
      XD_Name_val = x.getNodeName();
      setval(value.getParsedValue().getObject());
    }
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class jx$array_1 implements org.xdef.component.XComponent{
  public String getkey() {return _key;}
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> listOfjx$map() {
    return _jx$map;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> listOfjx$array() {
    return _jx$array;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> listOfjx$item() {
    return _jx$item;
  }
  public Object getAnyObj$(){return toXon();}
  public java.util.List<Object> getArray$() {return toXon();}
  public void setkey(String x) {_key=x;}
  public void addjx$map(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map x) {
    _jx$array.clear();_jx$item.clear();
    if (x!=null) _jx$map.add(x);
  }
  public void addjx$array(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1 x) {
    _jx$map.clear();_jx$item.clear();
    if (x!=null) _jx$array.add(x);
  }
  public void addjx$item(bugreports.MyTestX_AnyXXx.jx$array.jx$item x) {
    _jx$map.clear();_jx$array.clear();
    if (x!=null) _jx$item.add(x);
  }
  public String xposOfkey(){return XD_XPos+"/@key";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_key="key";
  private String _key;
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> _jx$item = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> _jx$array = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> _jx$map = new java.util.ArrayList<>();
  @Override
  public java.util.List<Object> toXon(){
    return org.xdef.component.XComponentUtil.toXonArray(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 2;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$item());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$array());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$map());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    if (getkey() != null)
      el.setAttribute(XD_Name_key, getkey());
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public jx$array_1() {}
  public jx$array_1(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$array_1(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"105C23EE551663205D3A56823BCD31F82DA426A8E0466125F3A68B94C9928785".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:array";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:array";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="x#JSON.ANYOBJECT$choice/$choice/jx:array";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
    XD_Name_key = x.getNodeName();
    setkey(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
    String s = x.getXMElement().getXDPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$item(this, x);
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1(this, x);
    return new jx$map(this, x); // x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    String s = x.xGetModelPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      listOfjx$item().add((bugreports.MyTestX_AnyXXx.jx$array.jx$item)x);
    else if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      listOfjx$array().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1)x);
    else
      listOfjx$map().add((jx$map)x); //x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class jx$map implements org.xdef.component.XComponent{
  public String getkey() {return _key;}
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> listOfjx$map() {
    return _jx$map;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> listOfjx$array() {
    return _jx$array;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> listOfjx$item() {
    return _jx$item;
  }
  public Object getAnyObj$(){return toXon();}
  public java.util.Map<String, Object> getMap$() {return toXon();}
  public void setkey(String x) {_key=x;}
  public void addjx$map(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map x) {
    _jx$array.clear();_jx$item.clear();
    if (x!=null) _jx$map.add(x);
  }
  public void addjx$array(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1 x) {
    _jx$map.clear();_jx$item.clear();
    if (x!=null) _jx$array.add(x);
  }
  public void addjx$item(bugreports.MyTestX_AnyXXx.jx$array.jx$item x) {
    _jx$map.clear();_jx$array.clear();
    if (x!=null) _jx$item.add(x);
  }
  public String xposOfkey(){return XD_XPos+"/@key";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_key="key";
  private String _key;
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> _jx$item = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> _jx$array = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> _jx$map = new java.util.ArrayList<>();
  @Override
  public java.util.Map<String, Object> toXon(){
    return org.xdef.component.XComponentUtil.toXonMap(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 3;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$item());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$array());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$map());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    if (getkey() != null)
      el.setAttribute(XD_Name_key, getkey());
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public jx$map() {}
  public jx$map(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$map(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"04602BEBEE5BEBBF7243FEE87415B79026F7BE05D04C98ADB023C9FA172E8DD4".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:map";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:map";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="x#JSON.ANYOBJECT$choice/$choice/jx:map";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
    XD_Name_key = x.getNodeName();
    setkey(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
    String s = x.getXMElement().getXDPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$item(this, x);
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1(this, x);
    return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map(this, x); // x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    String s = x.xGetModelPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      listOfjx$item().add((bugreports.MyTestX_AnyXXx.jx$array.jx$item)x);
    else if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      listOfjx$array().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1)x);
    else
      listOfjx$map().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map)x); //x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}
}
public static class jx$map implements org.xdef.component.XComponent{
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> listOfjx$map() {
    return _jx$map;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> listOfjx$array() {
    return _jx$array;
  }
  public java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> listOfjx$item() {
    return _jx$item;
  }
  public Object getAnyObj$(){return toXon();}
  public java.util.Map<String, Object> getMap$() {return toXon();}
  public void addjx$map(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map x) {
    _jx$array.clear();_jx$item.clear();
    if (x!=null) _jx$map.add(x);
  }
  public void addjx$array(bugreports.MyTestX_AnyXXx.jx$array.jx$array_1 x) {
    _jx$map.clear();_jx$item.clear();
    if (x!=null) _jx$array.add(x);
  }
  public void addjx$item(bugreports.MyTestX_AnyXXx.jx$array.jx$item x) {
    _jx$map.clear();_jx$array.clear();
    if (x!=null) _jx$item.add(x);
  }
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$item> _jx$item = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1> _jx$array = new java.util.ArrayList<>();
  private final java.util.List<bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map> _jx$map = new java.util.ArrayList<>();
  @Override
  public java.util.Map<String, Object> toXon(){
    return org.xdef.component.XComponentUtil.toXonMap(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 3;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$item());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$array());
    org.xdef.component.XComponentUtil.addXC(a, listOfjx$map());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public jx$map() {}
  public jx$map(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$map(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"AF1722EDA73ADD519E3D0C4665611135447A0313B047855EE2ED52E3EF65160B".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:map";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:map";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="x#testX/$choice/jx:map";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
    String s = x.getXMElement().getXDPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$item(this, x);
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1(this, x);
    return new bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map(this, x); // x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    String s = x.xGetModelPosition();
    if ("x#JSON.ANYOBJECT$choice/$choice/jx:item".equals(s))
      listOfjx$item().add((bugreports.MyTestX_AnyXXx.jx$array.jx$item)x);
    else if ("x#JSON.ANYOBJECT$choice/$choice/jx:array".equals(s))
      listOfjx$array().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1)x);
    else
      listOfjx$map().add((bugreports.MyTestX_AnyXXx.jx$array.jx$array_1.jx$map)x); //x#JSON.ANYOBJECT$choice/$choice/jx:map
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}