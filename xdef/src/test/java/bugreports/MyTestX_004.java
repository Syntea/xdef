// This file was generated by org.xdef.component.GenXComponent.
// X-position: "#a".
// Any modifications to this file will be lost upon recompilation.
package bugreports;
public class MyTestX_004 implements org.xdef.component.XComponent{
  public MyTestX_004.jx$item getjx$item() {return _jx$item;}
  public String get$_x_(){
    return _jx$item==null? null: org.xdef.xon.XonTools.jstringFromSource(_jx$item.getval());
  }
  public java.util.Map<String, Object> getMap$() {return toXon();}
  public void setjx$item(MyTestX_004.jx$item x) {_jx$item=x;}
  public void set$_x_(String x){
    if(x==null) _jx$item=null; else {
      if(_jx$item==null) setjx$item(new MyTestX_004.jx$item());
      _jx$item.setval(x);
    }
  }
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private MyTestX_004.jx$item _jx$item;
  @Override
  public java.util.Map<String, Object> toXon(){
    return org.xdef.component.XComponentUtil.toXonMap(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    java.util.List<org.xdef.component.XComponent> a=
      new java.util.ArrayList<>();
    org.xdef.component.XComponentUtil.addXC(a, getjx$item());
    return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
      if (doc.getDocumentElement()==null) doc.appendChild(el);
    }
    for (org.xdef.component.XComponent x: xGetNodeList())
      el.appendChild(x.toXml(doc));
    return el;
  }
  public MyTestX_004() {}
  public MyTestX_004(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public MyTestX_004(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"7A1B7C2874A02C0DE29270A35F0D0FB9EE277EDD3503B4734A0499435A1496EE".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="a";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:map";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#a/jx:map";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return new jx$item(this, x);}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
    x.xSetNodeIndex(XD_ndx++);
    setjx$item((jx$item) x); //#a/jx:map/jx:item
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class jx$item implements org.xdef.component.XComponent{
  public String getval() {return _val;}
  public String getkey() {return _key;}
  public void setval(String x) {_val=x;}
  public void setkey(String x) {_key=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
  public String xposOfkey(){return XD_XPos+"/@key";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private String _val;
  private String XD_Name_key="key";
  private String _key="_x_";
  @Override
  public String toXon() {
    Object o = getval();
    return (o instanceof org.xdef.xon.XonTools.JNull)? null
      : (String) org.xdef.xon.XonTools.xmlToJValue((String)o);
  }
  @Override
  public org.w3c.dom.Element toXml()
    {return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
    String name, String ns, String xdPos) {
    XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 0;}
  public final static byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
    return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
    org.w3c.dom.Element el;
    if (doc==null) {
      doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
        XD_NodeName, null);
      el = doc.getDocumentElement();
    } else {
      el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
    }
    if (getval() != null)
      el.setAttribute(XD_Name_val, getval());
    if (getkey() != null)
      el.setAttribute(XD_Name_key, getkey());
    return el;
  }
  public jx$item() {}
  public jx$item(org.xdef.component.XComponent p,
    String name, String ns, String xPos, String XDPos) {
    XD_NodeName=name; XD_NamespaceURI=ns;
    XD_XPos=xPos;
    XD_Model=XDPos;
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
    org.w3c.dom.Element el=x.getElement();
    XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
    XD_XPos=x.getXPos();
    XD_Model=x.getXMElement().getXDPosition();
    XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
    if (!"B2C44BDD081939E73158118AA2E3FD66B644152EC9EF976F633A935081862E62".equals(
      x.getXMElement().getDigest())) { //incompatible element model
      throw new org.xdef.sys.SRuntimeException(
        org.xdef.msg.XDEF.XDEF374);
    }
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#a/jx:map/jx:item";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value) {
    if (x.getXMNode().getXDPosition().endsWith("/@val")) {
      XD_Name_val = x.getNodeName();
      setval((String) (value.getParsedValue().isNull()? null: value.getParsedValue().getObject()));
    } else {
      XD_Name_key = x.getNodeName();
      setkey(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
    }
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}