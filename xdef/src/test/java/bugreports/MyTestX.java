// This file was generated by org.xdef.component.GenXComponent.
// XDPosition: "#x".
// Any modifications to this file will be lost upon recompilation.
package bugreports;
public class MyTestX implements org.xdef.component.XComponent{
  public java.util.List<String> get$a() {
	java.util.List<String> y =
	  new java.util.ArrayList<String>();
	for (a z : listOfa()) {
	  y.add(z.get$value());
	}
	return y;
  }
  public java.util.List<MyTestX.a> listOfa() {return _a;}
  public java.util.List<String> get$b() {
	java.util.List<String> y =
	  new java.util.ArrayList<String>();
	for (b z : listOfb()) {
	  y.add(z.get$value());
	}
	return y;
  }
  public java.util.List<MyTestX.b> listOfb() {return _b;}
  public java.util.List<String> get$c() {
	java.util.List<String> y =
	  new java.util.ArrayList<String>();
	for (c z : listOfc()) {
	  y.add(z.get$value());
	}
	return y;
  }
  public java.util.List<MyTestX.c> listOfc() {return _c;}
  public java.util.List<String> get$d() {
	java.util.List<String> y =
	  new java.util.ArrayList<String>();
	for (d z : listOfd()) {
	  y.add(z.get$value());
	}
	return y;
  }
  public java.util.List<MyTestX.d> listOfd() {return _d;}
  public java.util.List<String> get$e() {
	java.util.List<String> y =
	  new java.util.ArrayList<String>();
	for (e z : listOfe()) {
	  y.add(z.get$value());
	}
	return y;
  }
  public java.util.List<MyTestX.e> listOfe() {return _e;}
  public void set$a(java.util.List<String> x) {
	java.util.List<a> y = listOfa();
	y.clear();
	if (x==null)return;
	for (String w : x) {
	  if (w != null) {
		a z = new a();
		z.set$value(w);
		y.add(z);
	  }
	}
  }
  public void adda(MyTestX.a x) {if (x!=null) _a.add(x);}
  public void set$b(java.util.List<String> x) {
	java.util.List<b> y = listOfb();
	y.clear();
	if (x==null)return;
	for (String w : x) {
	  if (w != null) {
		b z = new b();
		z.set$value(w);
		y.add(z);
	  }
	}
  }
  public void addb(MyTestX.b x) {if (x!=null) _b.add(x);}
  public void set$c(java.util.List<String> x) {
	java.util.List<c> y = listOfc();
	y.clear();
	if (x==null)return;
	for (String w : x) {
	  if (w != null) {
		c z = new c();
		z.set$value(w);
		y.add(z);
	  }
	}
  }
  public void addc(MyTestX.c x) {if (x!=null) _c.add(x);}
  public void set$d(java.util.List<String> x) {
	java.util.List<d> y = listOfd();
	y.clear();
	if (x==null)return;
	for (String w : x) {
	  if (w != null) {
		d z = new d();
		z.set$value(w);
		y.add(z);
	  }
	}
  }
  public void addd(MyTestX.d x) {if (x!=null) _d.add(x);}
  public void set$e(java.util.List<String> x) {
	java.util.List<e> y = listOfe();
	y.clear();
	if (x==null)return;
	for (String w : x) {
	  if (w != null) {
		e z = new e();
		z.set$value(w);
		y.add(z);
	  }
	}
  }
  public void adde(MyTestX.e x) {if (x!=null) _e.add(x);}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.List<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	org.xdef.component.XComponentUtil.addXC(a, listOfa());
	org.xdef.component.XComponentUtil.addXC(a, listOfb());
	org.xdef.component.XComponentUtil.addXC(a, listOfc());
	org.xdef.component.XComponentUtil.addXC(a, listOfd());
	org.xdef.component.XComponentUtil.addXC(a, listOfe());
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	  if (doc.getDocumentElement()==null) doc.appendChild(el);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public MyTestX() {}
  public MyTestX(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public MyTestX(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"2DD99C601CC6B57A71617715E381E171".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private final java.util.List<MyTestX.a> _a = new java.util.ArrayList<MyTestX.a>();
  private final java.util.List<MyTestX.b> _b = new java.util.ArrayList<MyTestX.b>();
  private final java.util.List<MyTestX.c> _c = new java.util.ArrayList<MyTestX.c>();
  private final java.util.List<MyTestX.d> _d = new java.util.ArrayList<MyTestX.d>();
  private final java.util.List<MyTestX.e> _e = new java.util.ArrayList<MyTestX.e>();
  public static final String XD_NAME="x";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "x";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x) {
	String s = x.getXMElement().getXDPosition();
	if ("#x/a".equals(s))
	  return new a(this, x);
	if ("#x/b".equals(s))
	  return new b(this, x);
	if ("#x/c".equals(s))
	  return new c(this, x);
	if ("#x/d".equals(s))
	  return new d(this, x);
	return new e(this, x); // #x/e
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){
	x.xSetNodeIndex(XD_ndx++);
	String s = x.xGetModelPosition();
	if ("#x/a".equals(s))
	  listOfa().add((a)x);
	else if ("#x/b".equals(s))
	  listOfb().add((b)x);
	else if ("#x/c".equals(s))
	  listOfc().add((c)x);
	else if ("#x/d".equals(s))
	  listOfd().add((d)x);
	else
	  listOfe().add((e)x); //#x/e
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class a implements org.xdef.component.XComponent{
  public String get$value() {return _$value;}
  public void set$value(String x){_$value=x;}
  public String xposOf$value(){return XD_XPos+"/$text";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 0;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.ArrayList<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	if (get$value() != null)
	  org.xdef.component.XComponentUtil.addText(this,
		"#x/a/$text", a, get$value(), _$$value);
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public a() {}
  public a(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public a(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"952A6D37B0F110D4AC99EE46FC216D59".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String _$value;
  private char _$$value= (char) -1;
  public static final String XD_NAME="a";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "a";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x/a";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	_$$value=(char) XD_ndx++;
	set$value(org.xdef.component.XComponentUtil.jlinkToString(parseResult));
  }
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class b implements org.xdef.component.XComponent{
  public String get$value() {return _$value;}
  public void set$value(String x){_$value=x;}
  public String xposOf$value(){return XD_XPos+"/$text";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 1;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.ArrayList<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	if (get$value() != null)
	  org.xdef.component.XComponentUtil.addText(this,
		"#x/b/$text", a, get$value(), _$$value);
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public b() {}
  public b(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public b(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"C00A0BD16078457DABA8E7A49B0B4401".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String _$value;
  private char _$$value= (char) -1;
  public static final String XD_NAME="b";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "b";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x/b";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	_$$value=(char) XD_ndx++;
	set$value(org.xdef.component.XComponentUtil.jlinkToString(parseResult));
  }
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class c implements org.xdef.component.XComponent{
  public String get$value() {return _$value;}
  public void set$value(String x){_$value=x;}
  public String xposOf$value(){return XD_XPos+"/$text";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 2;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.ArrayList<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	if (get$value() != null)
	  org.xdef.component.XComponentUtil.addText(this,
		"#x/c/$text", a, get$value(), _$$value);
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public c() {}
  public c(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public c(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"444CB170A44EA7623A1D384FDDA82C79".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String _$value;
  private char _$$value= (char) -1;
  public static final String XD_NAME="c";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "c";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x/c";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	_$$value=(char) XD_ndx++;
	set$value(org.xdef.component.XComponentUtil.jlinkToString(parseResult));
  }
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class d implements org.xdef.component.XComponent{
  public String get$value() {return _$value;}
  public void set$value(String x){_$value=x;}
  public String xposOf$value(){return XD_XPos+"/$text";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 3;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.ArrayList<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	if (get$value() != null)
	  org.xdef.component.XComponentUtil.addText(this,
		"#x/d/$text", a, get$value(), _$$value);
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public d() {}
  public d(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public d(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"E6D0C65B16E626D51B24032452E110C1".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String _$value;
  private char _$$value= (char) -1;
  public static final String XD_NAME="d";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "d";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x/d";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	_$$value=(char) XD_ndx++;
	set$value(org.xdef.component.XComponentUtil.jlinkToString(parseResult));
  }
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
public static class e implements org.xdef.component.XComponent{
  public String get$value() {return _$value;}
  public void set$value(String x){_$value=x;}
  public String xposOf$value(){return XD_XPos+"/$text";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 0;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 4;}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.ArrayList<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	if (get$value() != null)
	  org.xdef.component.XComponentUtil.addText(this,
		"#x/e/$text", a, get$value(), _$$value);
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  public e() {}
  public e(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public e(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"963D140A280BDFB4558021B2E44A3FED".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String _$value;
  private char _$$value= (char) -1;
  public static final String XD_NAME="e";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "e";
  private String XD_NamespaceURI;
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#x/e";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	_$$value=(char) XD_ndx++;
	set$value(org.xdef.component.XComponentUtil.jlinkToString(parseResult));
  }
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}