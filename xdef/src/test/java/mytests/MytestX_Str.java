// This file was generated by org.xdef.component.GenXComponent.
// X-position: "#A".
// Any modifications to this file will be lost upon recompilation.
package mytests;
@SuppressWarnings("unchecked")
public class MytestX_Str implements org.xdef.component.XComponent{
  public MytestX_Str.jx$item getjx$item() {return _jx$item;}
  public String get$item(){
	return _jx$item==null? null: org.xdef.xon.XonTools.jstringFromSource(_jx$item.getval());
  }
  public MytestX_Str.jx$item_1 getjx$item_1() {return _jx$item_1;}
  public String get$item_1(){
	return _jx$item_1==null? null: org.xdef.xon.XonTools.jstringFromSource(_jx$item_1.getval());
  }
  public MytestX_Str.jx$item_2 getjx$item_2() {return _jx$item_2;}
  public org.xdef.sys.SDatetime get$item_2(){
	return _jx$item_2==null? null: _jx$item_2.getval();
  }
  public java.util.Date dateOf$item_2(){return org.xdef.sys.SDatetime.getDate(get$item_2());}
  public java.sql.Timestamp timestampOf$item_2(){return org.xdef.sys.SDatetime.getTimestamp(get$item_2());}
  public java.util.Calendar calendarOf$item_2(){return org.xdef.sys.SDatetime.getCalendar(get$item_2());}
  public MytestX_Str.jx$item_3 getjx$item_3() {return _jx$item_3;}
  public String get$item_3(){
	return _jx$item_3==null? null: org.xdef.xon.XonTools.jstringFromSource(_jx$item_3.getval());
  }
  public MytestX_Str.jx$item_4 getjx$item_4() {return _jx$item_4;}
  public String get$item_4(){
	return _jx$item_4==null? null: org.xdef.xon.XonTools.jstringFromSource(_jx$item_4.getval());
  }
  public java.util.List<Object> getArray$() {return toXon();}
  public void setjx$item(MytestX_Str.jx$item x) {_jx$item=x;}
  public void set$item(String x){
	if(x==null) _jx$item=null; else {
	  if(_jx$item==null) setjx$item(new MytestX_Str.jx$item());
	  _jx$item.setval(x);
	}
  }
  public void setjx$item_1(MytestX_Str.jx$item_1 x) {_jx$item_1=x;}
  public void set$item_1(String x){
	if(x==null) _jx$item_1=null; else {
	  if(_jx$item_1==null) setjx$item_1(new MytestX_Str.jx$item_1());
	  _jx$item_1.setval(x);
	}
  }
  public void setjx$item_2(MytestX_Str.jx$item_2 x) {_jx$item_2=x;}
  public void set$item_2(org.xdef.sys.SDatetime x){
	if(x==null) _jx$item_2=null; else {
	  if(_jx$item_2==null) setjx$item_2(new MytestX_Str.jx$item_2());
	  _jx$item_2.setval(x);
	}
  }
  public void set$item_2(java.util.Date x){set$item_2(org.xdef.sys.SDatetime.createFrom(x));}
  public void set$item_2(java.sql.Timestamp x){set$item_2(org.xdef.sys.SDatetime.createFrom(x));}
  public void set$item_2(java.util.Calendar x){set$item_2(org.xdef.sys.SDatetime.createFrom(x));}
  public void setjx$item_3(MytestX_Str.jx$item_3 x) {_jx$item_3=x;}
  public void set$item_3(String x){
	if(x==null) _jx$item_3=null; else {
	  if(_jx$item_3==null) setjx$item_3(new MytestX_Str.jx$item_3());
	  _jx$item_3.setval(x);
	}
  }
  public void setjx$item_4(MytestX_Str.jx$item_4 x) {_jx$item_4=x;}
  public void set$item_4(String x){
	if(x==null) _jx$item_4=null; else {
	  if(_jx$item_4==null) setjx$item_4(new MytestX_Str.jx$item_4());
	  _jx$item_4.setval(x);
	}
  }
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private MytestX_Str.jx$item _jx$item;
  private MytestX_Str.jx$item_1 _jx$item_1;
  private MytestX_Str.jx$item_2 _jx$item_2;
  private MytestX_Str.jx$item_3 _jx$item_3;
  private MytestX_Str.jx$item_4 _jx$item_4;
  @Override
  public java.util.List<Object> toXon(){
	return org.xdef.component.XComponentUtil.toXonArray(this);
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.List<org.xdef.component.XComponent> a=new java.util.ArrayList<>();
	org.xdef.component.XComponentUtil.addXC(a, getjx$item());
	org.xdef.component.XComponentUtil.addXC(a, getjx$item_1());
	org.xdef.component.XComponentUtil.addXC(a, getjx$item_2());
	org.xdef.component.XComponentUtil.addXC(a, getjx$item_3());
	org.xdef.component.XComponentUtil.addXC(a, getjx$item_4());
	return a;
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	  if (doc.getDocumentElement()==null) doc.appendChild(el);
	}
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  public MytestX_Str() {}
  public MytestX_Str(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public MytestX_Str(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"44FC28A8D45BF1B8D7499D78EA9F402B10DAD62FC44E885C889003B9CB8CB08C".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="A";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:array";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#A/jx:array";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){
	String s = x.getXMElement().getXDPosition();
	if ("#A/jx:array/jx:item".equals(s))
	  return new jx$item(this, x);
	if ("#A/jx:array/jx:item[2]".equals(s))
	  return new jx$item_1(this, x);
	if ("#A/jx:array/jx:item[3]".equals(s))
	  return new jx$item_2(this, x);
	if ("#A/jx:array/jx:item[4]".equals(s))
	  return new jx$item_3(this, x);
	return new jx$item_4(this, x); // #A/jx:array/jx:item[5]
  }
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {
	x.xSetNodeIndex(XD_ndx++);
	String s = x.xGetModelPosition();
	if (null == s)
		setjx$item_4((jx$item_4)x); //#A/jx:array/jx:item[5]
	else switch (s) {
			  case "#A/jx:array/jx:item":
			  setjx$item((jx$item)x);
			  break;
			  case "#A/jx:array/jx:item[2]":
			  setjx$item_1((jx$item_1)x);
			  break;
			  case "#A/jx:array/jx:item[3]":
			  setjx$item_2((jx$item_2)x);
			  break;
			  case "#A/jx:array/jx:item[4]":
			  setjx$item_3((jx$item_3)x);
			  break;
			  default:
			  setjx$item_4((jx$item_4)x); //#A/jx:array/jx:item[5]
			  break;
	  }
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
@SuppressWarnings("unchecked")
public static class jx$item implements org.xdef.component.XComponent{
  public String getval() {return _val;}
  public void setval(String x) {_val=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private String _val;
  @Override
  public String toXon() {
	Object o = getval();
	return (o instanceof org.xdef.xon.XonTools.JNull)? null
	  : (String) org.xdef.xon.XonTools.xmlToJValue((String)o);
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 0;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getval() != null)
	  el.setAttribute(XD_Name_val, getval());
	return el;
  }
  public jx$item() {}
  public jx$item(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"0C53F91876B240152FA9604BBE11509F8B87A05834506047315A4F5C1912F8E9".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A/jx:array/jx:item";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
	XD_Name_val = x.getNodeName();
	setval(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
@SuppressWarnings("unchecked")
public static class jx$item_1 implements org.xdef.component.XComponent{
  public String getval() {return _val;}
  public void setval(String x) {_val=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private String _val;
  @Override
  public String toXon() {
	Object o = getval();
	return (o instanceof org.xdef.xon.XonTools.JNull)? null
	  : (String) org.xdef.xon.XonTools.xmlToJValue((String)o);
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 1;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getval() != null)
	  el.setAttribute(XD_Name_val, getval());
	return el;
  }
  public jx$item_1() {}
  public jx$item_1(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item_1(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"0C53F91876B240152FA9604BBE11509F8B87A05834506047315A4F5C1912F8E9".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A/jx:array/jx:item[2]";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
	XD_Name_val = x.getNodeName();
	setval(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
@SuppressWarnings("unchecked")
public static class jx$item_2 implements org.xdef.component.XComponent{
  public org.xdef.sys.SDatetime getval() {return _val;}
  public java.util.Date dateOfval(){return org.xdef.sys.SDatetime.getDate(_val);}
  public java.sql.Timestamp timestampOfval(){return org.xdef.sys.SDatetime.getTimestamp(_val);}
  public java.util.Calendar calendarOfval(){return org.xdef.sys.SDatetime.getCalendar(_val);}
  public void setval(org.xdef.sys.SDatetime x) {_val=x;}
  public void setval(java.util.Date x) {_val=org.xdef.sys.SDatetime.createFrom(x);}
  public void setval(java.sql.Timestamp x) {_val=org.xdef.sys.SDatetime.createFrom(x);}
  public void setval(java.util.Calendar x) {_val=org.xdef.sys.SDatetime.createFrom(x);}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private org.xdef.sys.SDatetime _val;
  @Override
  public org.xdef.sys.SDatetime toXon() {
	Object o = getval();
	return (o instanceof org.xdef.xon.XonTools.JNull)? null
	  : (org.xdef.sys.SDatetime)o;
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 2;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getval() != null)
	  el.setAttribute(XD_Name_val, getval().formatDate("yyyy[Z]"));
	return el;
  }
  public jx$item_2() {}
  public jx$item_2(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item_2(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"80B8B237E26FE050CBF0C67F4C5E73D24848FF09EAC2FD44F64B73BF4B3653A0".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A/jx:array/jx:item[3]";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
	XD_Name_val = x.getNodeName();
	setval(value.getParsedValue().isNull()? null: value.getParsedValue().datetimeValue());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
@SuppressWarnings("unchecked")
public static class jx$item_3 implements org.xdef.component.XComponent{
  public String getval() {return _val;}
  public void setval(String x) {_val=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private String _val;
  @Override
  public String toXon() {
	Object o = getval();
	return (o instanceof org.xdef.xon.XonTools.JNull)? null
	  : (String) org.xdef.xon.XonTools.xmlToJValue((String)o);
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 3;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getval() != null)
	  el.setAttribute(XD_Name_val, getval());
	return el;
  }
  public jx$item_3() {}
  public jx$item_3(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item_3(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"0C53F91876B240152FA9604BBE11509F8B87A05834506047315A4F5C1912F8E9".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A/jx:array/jx:item[4]";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
	XD_Name_val = x.getNodeName();
	setval(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
@SuppressWarnings("unchecked")
public static class jx$item_4 implements org.xdef.component.XComponent{
  public String getval() {return _val;}
  public void setval(String x) {_val=x;}
  public String xposOfval(){return XD_XPos+"/@val";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  private String XD_Name_val="val";
  private String _val;
  @Override
  public String toXon() {
	Object o = getval();
	return (o instanceof org.xdef.xon.XonTools.JNull)? null
	  : (String) org.xdef.xon.XonTools.xmlToJValue((String)o);
  }
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 4;}
  public static final byte XON = 1;
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<>();
  }
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getval() != null)
	  el.setAttribute(XD_Name_val, getval());
	return el;
  }
  public jx$item_4() {}
  public jx$item_4(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
  }
  public jx$item_4(org.xdef.component.XComponent p,org.xdef.proc.XXNode x) {
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null? p.xGetObject(): null;
	if (!"0C53F91876B240152FA9604BBE11509F8B87A05834506047315A4F5C1912F8E9".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  public static final String XD_NAME="jx:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "jx:item";
  private String XD_NamespaceURI = "http://www.xdef.org/xon/4.0/w";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#A/jx:array/jx:item[5]";
  @Override
  public void xSetText(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x, org.xdef.XDParseResult value){
	XD_Name_val = x.getNodeName();
	setval(value.getParsedValue().isNull()? null: value.getParsedValue().toString());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(org.xdef.proc.XXNode x){return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x) {}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}