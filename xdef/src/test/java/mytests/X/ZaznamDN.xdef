<?xml version="1.0" encoding="UTF-8"?>
<xd:def xmlns:xd="http://www.xdef.org/xdef/4.0"
        impl-version="3.0.0.0" impl-date="19.06.2020"
        xd:script="options setAttrUpperCase,ignoreEntities,ignoreTextWhiteSpaces,ignoreAttrWhiteSpaces,trimAttr,trimText"
        xd:name="ZaznamDN"
        xd:root="ZaznamDN">

    <xd:declaration scope="local">
/* XX */
        boolean tab(String a, String b){return true;}
        void setTransXdef(String a, String b) {}
        void setMsgIdent(){}
        void setMsgIdent(String msgIdent){}
        void setErr(int a) {}
        void saveFO(boolean a){}
        void saveIdFoZaznam(){}
        void savePO(boolean a){}
        void setTransXdef(String a){}
        void setNull_IfIn(int a, int b){}
/* XX
        external method{
            boolean cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.tab(XXData ,String , String);
            void cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.setTransXdef(XXElement, String, String);
            void cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.setMsgIdent(XXData);
            void cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.setMsgIdent(XXData, String msgIdent);
            void cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.setErr(XXData, Long);
            void cz.syntea.skp.pis.vr.ivrg.rn.d2.IvrSkpPisD2XdExt.setNull_IfIn(XXElement, XDValue[]);
            void cz.syntea.skp.pis.vr.ivrg.rn.d2.IvrSkpPisD2XdExt.savePO(XXElement, boolean);
            void cz.syntea.skp.pis.vr.ivrg.rn.d2.IvrSkpPisD2XdExt.saveIdFoZaznam(XXElement);
            void cz.syntea.skp.pis.vr.ivrg.rn.d2.IvrSkpPisD2XdExt.saveFO(XXElement, boolean);
            void cz.syntea.gam.vr.ivrglib.IvrGeneralXdExt.setTransXdef(XXElement, String);
        }
/* XX */
        type bool               enum('FALSE','TRUE','true','false');
        type bool_Int           enum('0','1');
        type celkHmotnost       int(0,999_999);
        type cisloEv            string(1,12);
        type cisloEvidence      string(1,8);
        type cisloEvOsvedceni   string(1,8);
        type cisloKomunikace    string(1,7);
        type cisloTP            string(1,12);
        type cisloUzlu          num(3,4);
        type cj                 string(1,32);
        type dechVysledek       dec(3,2);
        type dnVerze            int(1,999);
        type fileName           string(1,255);
        type gpsSouradnice      dec(9,7);
        type hashMD5            string(1,32);
        type ic                 string(1,14);
        type cislo              long(0,9_999_999_999);
        type jmeno              string(1,24);
        type jmenoObchodni      string(1,36);
        type krevVysledek       dec(4,2);
        type nazevAdresa        string(1,36);
        type pocetMist          int(0,999);
        type prijmeni           string(1,36);
        type psc                string(1,8);
        type rc                 string(1,10);
        type textVeta           string(1,80);
        type textVeta1          string(1,256);
        type textOdstavec       string(1,512);
        type textOdstavec2      string(1,1536);
        type textStranka        string(1,4000);
        type titul              string(1,24);
        type typVozidla         string(1,128);
        type vecCisloVyrobni    string(1,26);
        type vecKvadrant        string(9);
        type vecSkoda           dec(11,2);
        type verzeCisloKniha    int(0,99_999);
        type verzeRokKniha      int(1,99);
        type verzeUzemiUtvar    string(2);
        type vin                string(1,26);
        type vykon              int(0,99_999);

        type date               xdatetime('d.M.y','yyyyMMdd');
        type dateTime           xdatetime('d.M.y H:m','yyyyMMddHHmm00');
        type dateTime2          xdatetime('d.M.y H:m:s','yyyyMMddHHmmss');
        type dateYear           xdatetime('yyyy');

        type dnKodUtvarSetri            tab('RN_NdnUtvar','KodNdnUtvar');
        type kodNdnZaznamPlatSchval     tab('RN_NdnZaznamPlatSchval','KodNdnZaznamPlatSchval');
        type kodSednStat                tab('RN_PrevodSednStat','KodSednStat');
        type kodNdnKniha                tab('RN_NdnKniha', 'KodNdnKniha');
        type kodSednOkres               tab('RN_SednOkres','KodSednOkres');
        type kodNdnStavSetreni          tab('RN_NdnStavSetreni', 'KodNdnStavSetreni');
        type kodNdnStavEvidence         tab('RN_NdnStavEvidence','KodNdnStavEvidence');
        type kodNdnKvalEvidence         tab('RN_NdnKvalEvidence','KodNdnKvalEvidence');
        type kodNdnKvalUdalost          tab('RN_NdnKvalUdalost','KodNdnKvalUdalost');
        type kodNdnPohlavi              tab('RN_NdnPohlavi','KodNdnPohlavi');
        type kodNdnKvalUcastnikProvoz   tab('RN_NdnKvalUcastnikProvoz','KodNdnKvalUcastnikProvoz');
        type kodNdnRoleFo               tab('RN_NdnRoleFo','KodNdnRoleFo');
        type kodNdnTypZraneni           tab('RN_NdnTypZraneni','KodNdnTypZraneni');
        type kodSednSituaceChodce       tab('RN_SednSituaceChodce','KodSednSituaceChodce');
        type kodSednChovaniChodce       tab('RN_SednChovaniChodce','KodSednChovaniChodce');
        type kodNdnRc                   tab('RN_NdnRC','KodNdnRC');
        type kodNdnUcastnikSetrvani     tab('RN_NdnUcastnikSetrvani','KodNdnUcastnikSetrvani');
        type kodSednZabezpeceni         tab('RN_SednZabezpeceni','KodSednZabezpeceni');
        type kodNdnDruhJinaVec          tab('RN_NdnDruhJinaVec','KodNdnDruhJinaVec');
        type kodSednPrekazka            tab('RN_SednPrekazka', 'KodSednPrekazka');
        type kodSysContentType          string();
        type kodNdnZaznamPlat           tab('RN_NdnZaznamPlat','KodNdnZaznamPlat');
        type kodSednPovrchVozovky       tab('RN_SednPovrchVozovky','KodSednPovrchVozovky');
        type kodSednKvalitaPovrchu      tab('RN_SednKvalitaPovrchu','KodSednKvalitaPovrchu');
        type kodSednStavPovrchu         tab('RN_SednStavPovrchu','KodSednStavPovrchu');
        type kodSednStavKrajnice        tab('RN_SednStavKrajnice','KodSednStavKrajnice');
        type kodSednZavadaKomunikace    tab('RN_SednZavadaKomunikace','KodSednZavadaKomunikace');
        type kodSednDeleniKomunikace    tab('RN_SednDeleniKomunikace','KodSednDeleniKomunikace');
        type kodSednPocasi              tab('RN_SednPocasi','KodSednPocasi');
        type kodSednViditelnost         tab('RN_SednViditelnost','KodSednViditelnost');
        type kodSednRozhled             tab('RN_SednRozhled','KodSednRozhled');
        type kodSednRizeniProvozu       tab('RN_SednRizeniProvozu','KodSednRizeniProvozu');
        type kodSednSituovaniDn         tab('RN_SednSituovaniDn','KodSednSituovaniDn');
        type kodSednSpecifickeObjektyDn tab('RN_SednSpecifickeObjektyDn','KodSednSpecifickeObjektyDn');
        type kodSednSmerovePomery       tab('RN_SednSmerovePomery','KodSednSmerovePomery');
        type kodSednRychlostniLimit     tab('RN_SednRychlostniLimit','KodSednRychlostniLimit');
        type kodNdnHustotaProvozu       tab('RN_NdnHustotaProvozu','KodNdnHustotaProvozu');
        type kodSednVObci               tab('RN_SednVObci','KodSednVObci');
        type kodSednMistoDn             tab('RN_SednMistoDn','KodSednMistoDn');
        type kodSednDruhKomunikace      tab('RN_SednDruhKomunikace','KodSednDruhKomunikace');
        type kodSednDruhKomunikaceKriz  tab('RN_SednDruhKomunikaceKriz','KodSednDruhKomunikaceKriz');
        type kodNdnDruhKomunikaceKm     tab('RN_NdnDruhKomunikaceKm','KodNdnDruhKomunikaceKm');
        type kodNdnDruhKomunikaceKmKriz tab('RN_NdnDruhKomunikaceKm','KodNdnDruhKomunikaceKm');
        type kodNdnDruhKomunikaceUzly   tab('RN_NdnDruhKomunikaceUzly','KodNdnDruhKomunikaceUzly');
        type kodNdnSufixKomunikace      tab('RN_NdnSufixKomunikace','KodNdnSufixKomunikace');
        type kodNdnDruhProcesniUkon     tab('RN_NdnDruhoProcesniUkon ','KodNdnDruhoProcesniUkon');
        type kodNdnKvalOsoba            tab('RN_NdnKvalOsoba','KodNdnKvalOsoba');
        type kodNdnDruhOProcesniUkon    tab('RN_NdnDruhoProcesniUkon ','KodNdnDruhoProcesniUkon');
        type kodNdnDrzitel              tab('RN_NdnDrzitel','KodNdnDrzitel');
        type kodNdnAlkoholDruhTestu     tab('RN_NdnAlkoholDruhTestu','KodNdnAlkoholDruhTestu');
        type kodNdnAlkoholVyhodTestu    tab('RN_NdnAlkoholVyhodTestu','KodNdnAlkoholVyhodTestu');
        type kodNdnAlkInlRozhodOVys     tab('RN_NdnAlkInlRozhodOVys','KodNdnAlkInlRozhodOVys');
        type kodNdnAlkInlVyhodTestLekar tab('RN_NdnAlkInlVyhodTest','KodNdnAlkInlVyhodTest');
        type kodNdnTypVec               tab('RN_NdnTypVec','KodNdnTypVec');
        type kodNdnTypVazbaVecVec       tab('RN_NdnTypVazbaVecVec','KodNdnTypVazbaVecVec');
        type kodNdnKvalObecObjekt       tab('RN_NdnKvalObecObjekt','KodNdnKvalObecObjekt');
        type kodNdn1PricinyTc           tab('RN_NdnPricinyTc','KodNdnPricinyTc');
        type kodNdn2PricinyTc           tab('RN_NdnPricinyTc2','KodNdnPricinyTc2');
        type kodNdn1NasledkyTc          tab('RN_NdnNasledkyTc','KodNdnNasledkyTc');
        type kodNdn2NasledkyTc          tab('RN_NdnNasledkyTc2','KodNdnNasledkyTc2');
        type kodNdn1Priciny             tab('RN_NdnPriciny','KodNdnPriciny');
        type kodNdn2Priciny             tab('RN_NdnPriciny2','KodNdnPriciny2');
        type kodNdn1Nasledky            tab('RN_NdnNasledky','KodNdnNasledky');
        type kodNdn2Nasledky            tab('RN_NdnNasledky2','KodNdnNasledky2');
        type kodNdn1KatVozidla          tab('RN_NdnDruhVozidla','KodNdnDruhVozidla');
        type kodNdn2KatVozidla          tab('RN_NdnDruhVozidla2','KodNdnDruhVozidla2');
        type kodNdn1ZnackaTyp           tab('RN_NdnZnackaTyp','KodNdnZnackaTyp');
        type kodNdn2ZnackaTyp           tab('RN_NdnZnackaTyp2','KodNdnZnackaTyp2');
        type kodNdnBarva                tab('RN_NdnBarva','KodNdnBarva');
        type kodNdnPoistovna            tab('CC_Pojistitel','KodPojistitele');
        type kodSednSmerJizdy           tab('RN_SednSmerJizdy','KodSednSmerJizdy');
        type kodNdnKvalDokladVozidla    tab('RN_NdnKvalDokladVozidla','KodNdnKvalDokladVozidla');
        type kodNdnVin                  tab('RN_NdnVin','KodNdnVin');
        type kodNdnStavPoNehode         tab('RN_NdnStavPoNehode','KodNdnStavPoNehode');
        type kodNdnVozManipulace        tab('RN_NdnVozManipulace','KodNdnVozManipulace');

    </xd:declaration>

    <ZaznamDN xd:script="finally {
                                    setTransXdef('RN_ZaznamDN');
                               }"
            DnXMLVersion="fixed    '1'"
            SeqDnCentrum="  cislo();                                                        onFalse {setMsgIdent('???'); setErr(1105)};
                                                                                                onAbsence {setMsgIdent('???'); setErr(1105)};
                                                                                                onTrue setMsgIdent()"
            DnKodUtvarSetri="  dnKodUtvarSetri();                                           onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnZaznamPlatSchval="  kodNdnZaznamPlatSchval();                             onFalse setErr(4225); onAbsence setErr(4202)"
            DnVerzeSedn="  cislo();                                                         onFalse setErr(4208); onAbsence setErr(4202)"
            DnCislo="  cislo();                                                             onFalse setErr(4208); onAbsence setErr(4202)">
        <DNVerze xd:script="occurs 1; ref DNVerze"/>
        <NdnDokument xd:script="occurs 0..; ref NdnDokument"/>
    </ZaznamDN>

    <!-- Nasledujici struktury jsou uvedeny v abecednim poradi -->
    <!-- ===================================================== -->

    <!-- Adresa -->
    <Adresa
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            AdresaObec="? nazevAdresa();                                                    onFalse setErr(4208)"
            AdresaUliceDom="? nazevAdresa();                                                onFalse setErr(4208)"
            AdresaPSC="? psc();                                                             onFalse setErr(4208)"
            AdresaOkres="? nazevAdresa();                                                   onFalse setErr(4208)"
            KodSednStat="  kodSednStat();                                                   onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Verze DN -->
    <DNVerze
            SeqDnVerze="  dnVerze();                                                        onFalse setErr(4208); onAbsence setErr(4202)"
            DnCj="? cj();                                                                   onFalse setErr(4208); onAbsence setText('-1')"

            KodNdnKniha="  kodNdnKniha();                                                   onFalse setErr(4225); onAbsence setErr(4202)"
            VerzeRokKniha="  verzeRokKniha();                                               onFalse setErr(4208); onAbsence setErr(4202)"
            VerzeCisloKniha="? verzeCisloKniha();                                           onFalse setErr(4208)"
            KodSednOkres="  kodSednOkres();                                                 onFalse setErr(4225); onAbsence setErr(4202)"

            VerzeOznaceni="  textVeta();                                                    onFalse setErr(4208); onAbsence setErr(4202)"

            VerzeDatumCas="  dateTime();                                                    onFalse setErr(4208); onAbsence setErr(4202)"
            VerzeDatumCasDo="? dateTime();                                                  onFalse setErr(4208)"
            DatumCasUlozeni="  dateTime2();                                                 onFalse setErr(4208); onAbsence setErr(4202)"

            VerzeUzemiUtvar="  verzeUzemiUtvar();                                           onFalse setErr(4208); onAbsence setErr(4202)"

            KodNdnStavSetreni="  kodNdnStavSetreni();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnStavEvidence="  kodNdnStavEvidence();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnKvalEvidence="  kodNdnKvalEvidence();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnKvalUdalost="  kodNdnKvalUdalost();                                       onFalse setErr(4225); onAbsence setErr(4202)">
        <Osoba xd:script="occurs 0..; ref Osoba"/>
        <Vec xd:script="occurs 0..; ref Vec"/>
        <Ohledani xd:script="occurs 0..; ref Ohledani"/>
        <VerzePrubeh xd:script="options preserveAttrCase; occurs 0..; ref VerzePrubeh"/>
    </DNVerze>

    <!-- Fyzicka osoba -->
    <FO xd:script="finally {
                                    /* Doplneni DEFAULT hodnoty KodNdnRc:: Slovenská republika => '1', ostatni => '-1' */
                                    if (!hasAttr('KodNdnRc')) {
                                       String stat=from('@KodSednStat');
                                       if (stat=='050') {
                                          setAttr('KodNdnRc','1');
                                       } else {
                                          setAttr('KodNdnRc','-1');
                                       }
                                    }
                                    saveFO(false);
                                    saveIdFoZaznam();
                                 }"
            FoTitul="? titul();                                                             onFalse setErr(4208)"
            FoJmeno="  jmeno();                                                             onFalse setErr(4208); onAbsence setErr(4202)"
            FoPrijmeni="  prijmeni();                                                       onFalse setErr(4208); onAbsence setErr(4202)"
            FoDatumNarozeni="? date();                                                      onFalse setErr(4208)"
            FoRC="? rc();                                                                   onFalse setErr(4208)"
            KodSednStat="  kodSednStat();                                                   onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnPohlavi="  kodNdnPohlavi();                                               onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnKvalUcastnikProvoz="  kodNdnKvalUcastnikProvoz();                         onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnRoleFo="  kodNdnRoleFo();                                                 onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnTypZraneni="  kodNdnTypZraneni();                                         onFalse setErr(4225); onAbsence setErr(4202)"
            FoUcastnikChovaniPopis="? textStranka();                                        onFalse setErr(4208)"

            KodSednSituaceChodce="  kodSednSituaceChodce();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednChovaniChodce="  kodSednChovaniChodce();                                 onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnRc="? kodNdnRc();                                                         onFalse setErr(4225); onAbsence setText('-1')"

            KodNdnUcastnikSetrvani="  kodNdnUcastnikSetrvani();                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednZabezpeceni="  kodSednZabezpeceni();                                     onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Jina vec -->
    <JinaVec
            KodNdnDruhJinaVec="  kodNdnDruhJinaVec();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednPrekazka="  kodSednPrekazka();                                           onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Dokument -->
    <NdnDokument
            SeqDokumentCentrum="  cislo();                                                  onFalse setErr(4208); onAbsence setErr(4202)"
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            FileName="  fileName();                                                         onFalse setErr(4208); onAbsence setErr(4202)"
            KodSysContentType="  kodSysContentType();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            FileHashMD5="  hashMD5();                                                       onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnZaznamPlat="  kodNdnZaznamPlat();                                         onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Procesni ukon: Ohledani -->
    <Ohledani xd:script="finally {
                                    /* jsou-li uvedeny obe hodnoty GPS */
                                    if (hasAttr('VerzeGPSSirka') AAND hasAttr('VerzeGPSDelka')) {
                                       String sSirka=from('@VerzeGPSSirka');
                                       String sDelka=from('@VerzeGPSDelka');

                                       float  fSirka=parseFloat(sSirka);
                                       float  fDelka=parseFloat(sDelka);

                                       /* Je-li nejaky z udaju GPS mimo rozsah uzemi Slovenska, cele GPS zahod */
                                       if ((fSirka LT 47) || (fSirka GE 50) ||
                                           (fDelka LT 16) || (fDelka GE 23)) {
                                          removeAttr('VerzeGPSSirka');
                                          removeAttr('VerzeGPSDelka');
                                       }
                                    } else {
                                       /* Je-li uveden jen jeden udaj GPS a druhy chybi, cele GPS zahod */
                                       if (hasAttr('VerzeGPSSirka') OR hasAttr('VerzeGPSDelka')) {
                                          if (hasAttr('VerzeGPSSirka')) removeAttr('VerzeGPSSirka');
                                          if (hasAttr('VerzeGPSDelka')) removeAttr('VerzeGPSDelka');
                                       }
                                    }
                                 }"
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            OhledCas="  dateTime();                                                         onFalse setErr(4208); onAbsence setErr(4202)"
            OhledCasDo="? dateTime();                                                       onFalse setErr(4208)"

            KodSednPovrchVozovky="  kodSednPovrchVozovky();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednKvalitaPovrchu="  kodSednKvalitaPovrchu();                               onFalse setErr(4225); onAbsence setErr(4202)"
            OhledKvalitaPovrchu="? textVeta1();                                             onFalse setErr(4208)"
            KodSednStavPovrchu="  kodSednStavPovrchu();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            OhledStavPovrchu="? textVeta1();                                                onFalse setErr(4208)"
            KodSednStavKrajnice="  kodSednStavKrajnice();                                   onFalse setErr(4225); onAbsence setErr(4202)"
            OhledStavKrajnice="? textVeta1();                                               onFalse setErr(4208)"
            KodSednZavadaKomunikace="  kodSednZavadaKomunikace();                           onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednDeleniKomunikace="  kodSednDeleniKomunikace();                           onFalse setErr(4225); onAbsence setErr(4202)"
            OhledDeleniKomunikace="? textVeta1();                                           onFalse setErr(4208)"
            KodSednPocasi="  kodSednPocasi();                                               onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednViditelnost="  kodSednViditelnost();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednRozhled="  kodSednRozhled();                                             onFalse setErr(4225); onAbsence setErr(4202)"
            OhledRozhled="? textVeta1();                                                    onFalse setErr(4208)"
            KodSednRizeniProvozu="  kodSednRizeniProvozu();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            OhledRizeniProvozu="? textVeta1();                                              onFalse setErr(4208)"
            KodSednSituovaniDn="  kodSednSituovaniDn();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednSpecifickeObjektyDn="  kodSednSpecifickeObjektyDn();                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednSmerovePomery="  kodSednSmerovePomery();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednRychlostniLimit="  kodSednRychlostniLimit();                             onFalse setErr(4225); onAbsence setErr(4202)"
            OhledRychlostniLimit="? textVeta1();                                            onFalse setErr(4208)"
            KodNdnHustotaProvozu="  kodNdnHustotaProvozu();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            OhledDopravniSituace="? textOdstavec2();                                        onFalse setErr(4208)"

            KodSednVObci="  kodSednVObci();                                                 onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednMistoDn="  kodSednMistoDn();                                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednDruhKomunikace="  kodSednDruhKomunikace();                               onFalse setErr(4225); onAbsence setErr(4202)"
            KodSednDruhKomunikaceKriz="  kodSednDruhKomunikaceKriz();                       onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnDruhKomunikaceKm="  kodNdnDruhKomunikaceKm();                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnDruhKomunikaceKmKriz="  kodNdnDruhKomunikaceKmKriz();                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnDruhKomunikaceUzly="  kodNdnDruhKomunikaceUzly();                         onFalse setErr(4225); onAbsence setErr(4202)"

            VerzeCisloKomunikace="? cisloKomunikace();                                      onFalse setErr(4208)"
            KodNdnSufixKomunikace="  kodNdnSufixKomunikace();                               onFalse setErr(4225); onAbsence setErr(4202)"
            VerzeKm="? cislo();                                                             onFalse setErr(4208)"
            VerzeCisloUzlu1="? cisloUzlu();                                                 onFalse setErr(4208)"
            VerzeCisloUzlu2="? cisloUzlu();                                                 onFalse setErr(4208)"
            VerzeGPSSirka="? gpsSouradnice();                                               onFalse setErr(4208)"
            VerzeGPSDelka="? gpsSouradnice();                                               onFalse setErr(4208)"
            VerzePopisMista="? textOdstavec();                                              onFalse setErr(4208)"
            VerzeObec="? textVeta();                                                        onFalse setErr(4208)"

            FotodokumentacePopis="? textStranka();                                          onFalse setErr(4208)">
        <OhledaniProcesniUkon xd:script="occurs 0..; ref OhledaniProcesniUkon"/>
    </Ohledani>

    <!-- Procesní úkon k ohledání -->
    <OhledaniProcesniUkon
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnDruhProcesniUkon="  kodNdnDruhProcesniUkon();                             onFalse setErr(4225); onAbsence setErr(4202)"
            RefKlientDokument="? cislo();                                                   onFalse setErr(4208)">
        <xd:choice>
            <VlozeniFoto xd:script="ref VlozeniFoto"/>
        </xd:choice>
    </OhledaniProcesniUkon>

    <!-- Osoba -->
    <Osoba
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            RefKlientVec="? cislo();                                                        onFalse setErr(4208)"
            KodNdnKvalOsoba="  kodNdnKvalOsoba();                                           onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnZaznamPlat="  kodNdnZaznamPlat();                                         onFalse setErr(4225); onAbsence setErr(4202)">
        <xd:choice xd:script="occurs 0..1">
            <FO xd:script="ref FO"/>
            <PO xd:script="ref PO"/>
        </xd:choice>
        <xd:mixed>
            <Adresa xd:script="occurs 0..1; ref Adresa"/>
            <OsobaProcesniUkon xd:script="occurs 0..; ref OsobaProcesniUkon"/>
        </xd:mixed>
    </Osoba>

    <!-- Osoba Procesni Ukony -->
    <OsobaProcesniUkon
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnDruhOProcesniUkon="  kodNdnDruhOProcesniUkon();                           onFalse setErr(4225); onAbsence setErr(4202)">
        <xd:choice xd:script="occurs 0..1">
            <TestOsoba xd:script="ref TestOsoba"/>
            <UkonOsobaAlkohol xd:script="ref UkonOsobaAlkohol"/>
            <UkonOsobaInl xd:script="ref UkonOsobaInl"/>
        </xd:choice>
    </OsobaProcesniUkon>

    <!-- Pravnicka osoba -->
    <PO     xd:script="finally savePO(true);"
            PoObchodniJmeno="  jmenoObchodni();                                             onFalse setErr(4208); onAbsence setErr(4202)"
            PoIC="  ic();                                                                   onFalse setErr(4208); onAbsence setErr(4202)"
            KodSednStat="  kodSednStat();                                                   onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Subjekt drzitel, Kodentifikace subjektu v ramci osoby  -->
    <SubjektDrzitel
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            RefKlientOsoba="  cislo();                                                      onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnDrzitel="  kodNdnDrzitel();                                               onFalse setErr(4225); onAbsence setErr(4202)"
    />

    <!-- Procesni ukon: Test na alkohol nebo jinou navykovou latku -->
    <TestOsoba xd:script="init {
                                    /* 12.01.2017: oprava zpetne nekompatibility jmena a hodnoty (-1 x 0) atributu z B.B. */
                                    if (hasAttr('KodNdnAlkInlVyhodTest')) {
                                       String kod=from('@KodNdnAlkInlVyhodTest');
                                       if (kod == '-1') {
                                          kod='0';
                                       }

                                       setAttr('KodNdnAlkoholVyhodTestu',kod);
                                    }

                                    /* 09.02.2017: oprava zpetne nekompatibility hodnoty (-1 x 0) atributu KodNdnAlkoholVyhodTestu z B.B. */
                                    if (hasAttr('KodNdnAlkoholVyhodTestu')) {
                                       String kod=from('@KodNdnAlkoholVyhodTestu');
                                       if (kod == '-1') {
                                          setAttr('KodNdnAlkoholVyhodTestu','0');
                                       }
                                    }"
            KodNdnAlkoholDruhTestu="  kodNdnAlkoholDruhTestu();                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnAlkoholVyhodTestu="  kodNdnAlkoholVyhodTestu();                           onFalse setErr(4225); onAbsence setErr(4202)"
            TestVysledek1="? textVeta();                                                    onFalse setErr(4208)"
            TestHodnoceni="? textStranka();                                                 onFalse setErr(4208)"
    />

    <!-- Ukon osoba alkohol -->
    <UkonOsobaAlkohol
            AlkMetodaDech="  bool_Int();                                                    onFalse setErr(4208); onAbsence setErr(4202)"
            AlkMetodaPriznaky="  bool_Int();                                                onFalse setErr(4208); onAbsence setErr(4202)"
            AlkMetodaOdber="  bool_Int();                                                   onFalse setErr(4208); onAbsence setErr(4202)"

            DechVysledek1="? dechVysledek();                                                onFalse setErr(4208)"
            DechOsobaOdmitl="  bool_Int();                                                  onFalse setErr(4208); onAbsence setErr(4202)"

            KodNdnAlkInlRozhodOVys="  kodNdnAlkInlRozhodOVys();                             onFalse setErr(4225); onAbsence setErr(4202)"
            KrevVysledek="? krevVysledek();                                                 onFalse setErr(4208)"
            KrevVysledekMgNaL="? krevVysledek();                                            onFalse setErr(4208)"
            KodNdnAlkInlVyhodTestLekar="  kodNdnAlkInlVyhodTestLekar();                     onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnAlkInlVyhodTestPolicie="  kodNdnAlkInlVyhodTestLekar();                   onFalse setErr(4225); onAbsence setErr(4202)"
            AlkCelkoveHodnoceni="? textStranka();                                           onFalse setErr(4208)"
    />

    <!-- Ukon osoba psychotronika -->
    <UkonOsobaInl xd:script="init{
                                        /* 09.11.2016: oprava [docasne] chyby ve jmenu atributu z B.B. */
                                        if (hasAttr('KodNdnAlkInlVyhodTesTox') AAND !hasAttr('KodNdnAlkInlVyhodTestTox')) {
                                           String kod=from('@KodNdnAlkInlVyhodTesTox');
                                           setAttr('KodNdnAlkInlVyhodTestTox',kod);
                                        }
                                     }"
            InlMetodaPsychoMotorika="  bool_Int();                                          onFalse setErr(4208); onAbsence setErr(4202)"
            InlMetodaVysPristroj="  bool_Int();                                             onFalse setErr(4208); onAbsence setErr(4202)"
            InlMetodaOdber="  bool_Int();                                                   onFalse setErr(4208); onAbsence setErr(4202)"

            VysPristrojiOdmitl="  bool_Int();                                               onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnAlkInlVyhodTestLekar="  kodNdnAlkInlVyhodTestLekar();                     onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnAlkInlRozhodOVys="  kodNdnAlkInlRozhodOVys();                             onFalse setErr(4225); onAbsence setErr(4202)"

            DruhScreenDrogLeciv="? bool_Int();                                              onFalse setErr(4208); onAbsence setErr(4202)"
            VyhodTestDrogLeciv="? bool();                                                   onFalse setErr(4208); onAbsence setErr(4202)"
            DruhScreenPrchLatek="  bool_Int();                                              onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnAlkInlVyhodTestPrch="  kodNdnAlkInlVyhodTestLekar();                      onFalse setErr(4225); onAbsence setErr(4202)"
            DruhScreenToxLatek="  bool_Int();                                               onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnAlkInlVyhodTestTox="  kodNdnAlkInlVyhodTestLekar();                       onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnAlkInlVyhodTestPolicie="  kodNdnAlkInlVyhodTestLekar();                   onFalse setErr(4225); onAbsence setErr(4202)"
            InlCelkoveHodnoceni="? textStranka();                                           onFalse setErr(4208)"
    />

    <!-- Vec na miste nehody -->
    <Vec
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            KodNdnTypVec="  kodNdnTypVec();                                                 onFalse setErr(4225); onAbsence setErr(4202)"
            VecOznaceni="  textVeta();                                                      onFalse setErr(4208); onAbsence setErr(4202)"
            RefVecPredchozi="? cislo();                                                     onFalse setErr(4208); onAbsence setText('0')"
            KodNdnTypVazbaVecVec="  kodNdnTypVazbaVecVec();                                 onFalse setErr(4225); onAbsence setErr(4202)"

            VecSkoda="  vecSkoda();                                                         onFalse setErr(4208); onAbsence setErr(4202)"
            VecPopisSkoda="? textStranka();                                                 onFalse setErr(4208)"
            VecSkodaNaklad="  vecSkoda();                                                   onFalse setErr(4208); onAbsence setErr(4202)"
            VecPopisSkodaNaklad="? textStranka();                                           onFalse setErr(4208)"
            VecMena="  enum('EUR');                                                         onFalse setErr(4225); onAbsence setErr(4202)"

            VecKvadrant="  vecKvadrant();                                                   onFalse setErr(4208); onAbsence setErr(4202)"
            VecPopisL="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisR="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisF="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisB="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisT="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisU="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisN="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisX="? textOdstavec();                                                    onFalse setErr(4208)"
            VecPopisZ="? textOdstavec();                                                    onFalse setErr(4208)"

            VecCisloVyrobni="? vecCisloVyrobni();                                           onFalse setErr(4208)"
            KodNdnZaznamPlat="  kodNdnZaznamPlat();                                         onFalse setErr(4225); onAbsence setErr(4202)">
        <xd:choice xd:script="occurs 0..1">
            <Vozidlo xd:script="ref Vozidlo"/>
            <JinaVec xd:script="ref JinaVec"/>
        </xd:choice>
        <SubjektDrzitel xd:script="occurs 0..; ref SubjektDrzitel"/>
    </Vec>

    <!-- Popis pricin a nasledku DN -->
    <VerzePricina
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            RefKlientOsoba="? cislo();                                                      onFalse setErr(4208)"

            KodNdnKvalObecObjekt="  kodNdnKvalObecObjekt();                                 onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn1PricinyTc="  kodNdn1PricinyTc();                                         onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2PricinyTc="  kodNdn2PricinyTc();                                         onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn1NasledkyTc="  kodNdn1NasledkyTc();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2NasledkyTc="  kodNdn2NasledkyTc();                                       onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdn1Priciny="  kodNdn1Priciny();                                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2Priciny="  kodNdn2Priciny();                                             onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn1Nasledky="  kodNdn1Nasledky();                                           onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2Nasledky="  kodNdn2Nasledky();                                           onFalse setErr(4225); onAbsence setErr(4202)"

            KodNdnZaznamPlat="? kodNdnZaznamPlat();                                         onFalse setErr(4208); onAbsence setText('-1')"
            RozhodPricina="? bool();                                                        onFalse setErr(4208)"
    />

    <!-- Popis prubehu DN jako pravni skutecnosti -->
    <VerzePrubeh
            SeqKlient="  cislo();                                                           onFalse setErr(4208); onAbsence setErr(4202)"
            PrubehPopis="? textStranka();                                                   onFalse setErr(4208)">
        <VerzePricina xd:script="occurs 0..; ref VerzePricina"/>
    </VerzePrubeh>

    <!-- Vložení fotografie -->
    <VlozeniFoto xd:script="finally {
                                    /* jsou-li uvedeny obe hodnoty GPS */
                                    if (hasAttr('FotoGPSSirka') AAND hasAttr('FotoGPSDelka')) {
                                       String sSirka=from('@FotoGPSSirka');
                                       String sDelka=from('@FotoGPSDelka');

                                       float  fSirka=parseFloat(sSirka);
                                       float  fDelka=parseFloat(sDelka);

                                       /* Je-li nejaky z udaju GPS mimo rozsah uzemi Slovenska, cele GPS zahod */
                                       if ((fSirka LT 47) || (fSirka GE 50) ||
                                           (fDelka LT 16) || (fDelka GE 23)) {
                                          removeAttr('FotoGPSSirka');
                                          removeAttr('FotoGPSDelka');
                                       }
                                    } else {
                                       /* Je-li uveden jen jeden udaj GPS a druhy chybi, cele GPS zahod */
                                       if (hasAttr('FotoGPSSirka') OR hasAttr('FotoGPSDelka')) {
                                          if (hasAttr('FotoGPSSirka')) removeAttr('FotoGPSSirka');
                                          if (hasAttr('FotoGPSDelka')) removeAttr('FotoGPSDelka');
                                       }
                                    }
                                 }"
            FotoDatumZaberu="? dateTime2();                                                 onFalse setErr(4208)"
            FotoGPSDelka="? gpsSouradnice();                                                onFalse setErr(4208)"
            FotoGPSSirka="? gpsSouradnice();                                                onFalse setErr(4208)"
    />

    <!-- Silnicni vozidlo -->
    <Vozidlo xd:script=" init {
                                    /* 26.06.2013: oprava bordelu v datech z B.B. */
                                    if (hasAttr('KodNdn1KatVozidla') AAND hasAttr('KodNdn2KatVozidla')) {
                                       String kod1=from('@KodNdn1KatVozidla');
                                       String kod2=from('@KodNdn2KatVozidla');

                                       if (kod1=='00') {
                                          if (kod2=='01') {
                                             setAttr('KodNdn1KatVozidla','-1');
                                             setAttr('KodNdn2KatVozidla','-1');
                                          }
                                          if (kod2=='02') {
                                             setAttr('KodNdn1KatVozidla','11');
                                             setAttr('KodNdn2KatVozidla','01');
                                          }
                                       }
                                    }
                                 }

                                 finally {
                                    if (hasAttr('KodNdnKvalDokladVozidla')) {
                                       String kval=from('@KodNdnKvalDokladVozidla');
                                       if (kval=='-1' || kval=='03') {
                                          removeAttr('SilCisloEvidence');
                                          removeAttr('SilCisloEvOsvedceni');
                                       }

                                       if (kval=='01') {
                                          String tp=from('@SilCisloTP');
                                          if (tp=='')
                                             removeAttr('SilCisloEvOsvedceni');
                                          else
                                             setAttr('SilCisloEvOsvedceni',tp);

                                          removeAttr('SilCisloTP');
                                          removeAttr('SilCisloEvidence');
                                       }

                                       /* Ze SilCisloTP se musi vyhazet mezery, protoze kvuli nim se nekdy prekroci max. delka SilCisloEvidence */
                                       if (kval=='02') {
                                          /* Pouze u slovenských vozidel */
                                          String stat=from('@KodSednStat');
                                          if (stat=='050') {
                                             String tp=from('@SilCisloTP');
                                             if (tp=='')
                                                removeAttr('SilCisloEvidence');
                                             else
                                                setAttr('SilCisloEvidence',replace(tp,' ','')); /* problem delek: 12 -> 8 */

                                             removeAttr('SilCisloTP');
                                             removeAttr('SilCisloEvOsvedceni');
                                          }
                                       }

                                       if (kval=='04' || kval=='05') {
                                          removeAttr('SilCisloTP');
                                          removeAttr('SilCisloEvidence');
                                          removeAttr('SilCisloEvOsvedceni');
                                       }
                                    } else {
                                       setAttr('KodNdnKvalDokladVozidla','09');
                                    }
                                 }"
            KodNdn1KatVozidla="  kodNdn1KatVozidla();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2KatVozidla="  kodNdn2KatVozidla();                                       onFalse setErr(4225); onAbsence setErr(4202)"
            SilCisloEv="  cisloEv();                                                        onFalse setErr(4208); onAbsence setErr(4202)"
            KodSednStat="  kodSednStat();                                                   onFalse setErr(4225); onAbsence setErr(4202)"

            SilVIN="? vin();                                                                onFalse setErr(4208)"
            SilCisloTP="? cisloTP();                                                        onFalse setErr(4208)"
            SilCisloEvidence="? cisloEvidence();                                            onFalse setErr(4208)"
            SilDatum1Evidence="? date();                                                    onFalse setErr(4208)"
            SilCisloEvOsvedceni="? cisloEvOsvedceni();                                      onFalse setErr(4208)"

            KodNdn1ZnackaTyp="  kodNdn1ZnackaTyp();                                         onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdn2ZnackaTyp="  kodNdn2ZnackaTyp();                                         onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnBarva="  kodNdnBarva();                                                   onFalse setErr(4225); onAbsence setErr(4202)"

            SilCisloPoistenieEv="? textVeta();                                              onFalse setErr(4208)"
            KodNdnPoistovna="  int();                                               onTrue setNull_IfIn(0,9999); onAbsence setErr(4202)"
            SilPoistovna="? textVeta();                                                     onFalse setErr(4208)"

            KodSednSmerJizdy="  kodSednSmerJizdy();                                         onFalse setErr(4225); onAbsence setErr(4202)"

            DrazniOznaceni="? textVeta();                                                   onFalse setErr(4208)"

            SilTechKontrolaOd="? date();                                                    onFalse setErr(4208)"
            SilTechKontrolaDo="? date();                                                    onFalse setErr(4208)"
            SilTypVozidla="? typVozidla();                                                  onFalse setErr(4208)"
            SilVybaveniPas="? bool();                                                       onFalse setErr(4208)"
            SilVybaveniAirbag="? bool();                                                    onFalse setErr(4208)"
            SilVybaveniSedacka="? bool();                                                   onFalse setErr(4208)"
            SilVybaveniRam="? bool();                                                       onFalse setErr(4208)"
            SilVybaveniDefZona="? bool();                                                   onFalse setErr(4208)"
            SilVybaveniPPDP="? bool();                                                      onFalse setErr(4208)"
            SilVybaveniJiny="? bool();                                                      onFalse setErr(4208)"
            SilVybaveniPopis="? textOdstavec();                                             onFalse setErr(4208)"

            KodNdnKvalDokladVozidla="? kodNdnKvalDokladVozidla();                           onFalse setErr(4225); onAbsence setText('-1')"
            KodNdnVin="? kodNdnVin();                                                       onFalse setErr(4225); onAbsence setText('-1')"

            KodNdnStavPoNehode="  kodNdnStavPoNehode();                                     onFalse setErr(4225); onAbsence setErr(4202)"
            KodNdnVozManipulace="  kodNdnVozManipulace();                                   onFalse setErr(4225); onAbsence setErr(4202)"

            SilRokVyroby="? dateYear();                                                     onFalse setErr(4208)"
            SilVykon="? vykon();                                                            onFalse setErr(4208)"
            SilCelkHmotnost="? celkHmotnost();                                              onFalse setErr(4208)"
            SilMistSezeni="? pocetMist();                                                   onFalse setErr(4208)"
            SilMistStani="? pocetMist();                                                    onFalse setErr(4208)"
            SilMistLuzek="? pocetMist();                                                    onFalse setErr(4208)"

            HlBezpPrZavesKolPosk = "? bool()"
            HlBezpPrDeformZonyPosk = "? bool()"
            HlBezpPrAirbagyPosk = "? bool()"
            HlBezpPrRizeniPosk = "? bool()"
            HlBezpPrBrzdyPosk = "? bool()"
    />
</xd:def>