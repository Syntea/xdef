boolean ::= "true" | "false"number ::= int frac exp | int frac | int exp | intint ::= "-"? digitsdigits ::= [0-9]+frac ::= "." digitsexp ::= [eE] ("+" | "-")? digitsstring ::= ('"' ([^\"] | controlcharacter)* '"' |  "'" ([^\'] | controlcharacter)* "'")controlcharacter ::= '\"' | '\\' | '\/' | '\b' | '\f' | '\n' | '\r' | '\t' |  ('\u' [0-9a-fA-F]{4})S ::= [#9#10#13 ]* /*skipped white spaces*/object ::= "{" (members)* S "}"members ::= S pair (S "," S pair)*pair ::= string S ":" S valuearray ::= "[" S list? S "]"list ::= value (S "," S value )*value ::= S? (pair | "null" | boolean | number | string | array | object) S?