<?xml version="1.0" encoding="UTF-8"?>

<xd:def xmlns:xd="http://www.syntea.cz/xdef/2.0"
  xd:name="t016"
  xd:root="root">
  <xd:declaration>
    type tokens_Type{parse: string() &amp; enum("ab", "cd");}
    type list_Type{parse: string() &amp; enum("ab", "cd");}
    type integer1_Type{parse: int(-134217728, 134217727);}
    type integer_Type{parse: int(-2147483648, 2147483647);}
    type short_Type{parse: int(-32768, 32767);}
    type byte_Type{parse: int(-128, 127);}
    type duration_user_Type{parse: string();}
    type date10_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])\\s([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]");}
    type date9_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])\\s([01][0-9]|2[0-3]):[0-5][0-9]");}
    type date8_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])");}
    type date7_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9][0-5][0-9]");}
    type date6_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9]");}
    type date5_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])");}
    type date3_XdDatetime_Type{parse: string() &amp; regex("([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}\\s([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]");}
    type date2_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9]|([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}\\s([01][0-9]|2[0-3]):[0-5][0-9]");}
    type date1_XdDatetime_Type{parse: string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])|([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}");}
  </xd:declaration>
  <root date1="required date1_XdDatetime_Type()"
    date2="required date2_XdDatetime_Type()"
    date3="required date3_XdDatetime_Type()"
    date4="required ISOyear()"
    date5="required date5_XdDatetime_Type()"
    date6="required date6_XdDatetime_Type()"
    date7="required date7_XdDatetime_Type()"
    date8="required date8_XdDatetime_Type()"
    date9="required date9_XdDatetime_Type()"
    date10="required date10_XdDatetime_Type()"
    date="required ISOdate()"
    time="required ISOtime()"
    dateTime="required ISOdateTime()"
    day="required ISOday()"
    month="required ISOmonth()"
    year="required ISOyear()"
    monthDay="required ISOmonthDay()"
    yearMonth="required ISOyearMonth()"
    duration="required duration_user_Type()"
    byte="required byte_Type()"
    short="required short_Type()"
    integer="required integer_Type()"
    integer1="required integer1_Type()"
    long="required int()"
    list="required list_Type()"
    tokens="required tokens_Type()">
    <xd:sequence xd:script="occurs 1">
      <date1 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])|([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}")
      </date1>
      <date2 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9]|([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}\\s([01][0-9]|2[0-3]):[0-5][0-9]")
      </date2>
      <date3 xd:script="occurs 1..*">
        required string() &amp; regex("([0-2][0-9]|3[01])\\.(0[1-9]|1[0-2])\\.(19|20)[0-9]{2}\\s([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]")
      </date3>
      <date4 xd:script="occurs 1..*">
        required ISOyear()
      </date4>
      <date5 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])")
      </date5>
      <date6 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9]")
      </date6>
      <date7 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}(0[1-9]|1[0-2])([0-2][0-9]|3[01])([01][0-9]|2[0-3])[0-5][0-9][0-5][0-9]")
      </date7>
      <date8 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])")
      </date8>
      <date9 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])\\s([01][0-9]|2[0-3]):[0-5][0-9]")
      </date9>
      <date10 xd:script="occurs 1..*">
        required string() &amp; regex("(19|20)[0-9]{2}\\.(0[1-9]|1[0-2])\\.([0-2][0-9]|3[01])\\s([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]")
      </date10>
      <date xd:script="occurs 1..*">
        required ISOdate()
      </date>
      <time xd:script="occurs 1..*">
        required ISOtime()
      </time>
      <dateTime xd:script="occurs 1..*">
        required ISOdateTime()
      </dateTime>
      <day xd:script="occurs 1..*">
        required ISOday()
      </day>
      <month xd:script="occurs 1..*">
        required ISOmonth()
      </month>
      <year xd:script="occurs 1..*">
        required ISOyear()
      </year>
      <monthDay xd:script="occurs 1..*">
        required ISOmonthDay()
      </monthDay>
      <yearMonth xd:script="occurs 1..*">
        required ISOyearMonth()
      </yearMonth>
      <duration xd:script="occurs 1..*">
        required string()
      </duration>
      <byte xd:script="occurs 1..*">
        required int(-128, 127)
      </byte>
      <short xd:script="occurs 1..*">
        required int(-32768, 32767)
      </short>
      <integer xd:script="occurs 1..*">
        required int(-2147483648, 2147483647)
      </integer>
      <integer1 xd:script="occurs 1..*">
        required int(-134217728, 134217727)
      </integer1>
      <long xd:script="occurs 1..*">
        required int()
      </long>
      <list xd:script="occurs 1..*">
        required string() &amp; enum("ab", "cd")
      </list>
      <tokens xd:script="occurs 1..*">
        required string() &amp; enum("ab", "cd")
      </tokens>
    </xd:sequence>
  </root>
</xd:def>