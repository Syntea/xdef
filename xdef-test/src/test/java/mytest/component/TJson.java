// This file was generated by org.xdef.component.GenXComponent.
// XDPosition: "#json".
// Any modifications to this file will be lost upon recompilation.
package mytest.component;
public class TJson implements org.xdef.component.XComponent{
  public org.xdef.sys.SDatetime jgetitem(){
	return _js$item==null?null:_js$item.getvalue();
  }
  public java.util.Date jdateOfitem(){return org.xdef.sys.SDatetime.getDate(jgetitem());}
  public java.sql.Timestamp jtimestampOfitem(){return org.xdef.sys.SDatetime.getTimestamp(jgetitem());}
  public java.util.Calendar jcalendarOfitem(){return org.xdef.sys.SDatetime.getCalendar(jgetitem());}
  public TJson.js$item getjs$item() {return _js$item;}
  public void jsetitem(org.xdef.sys.SDatetime x){
	if(x==null) _js$item=null; else {
	  if(_js$item==null) setjs$item(new TJson.js$item());
	  _js$item.setvalue(x);
	}
  }
  public void jsetitem(java.util.Date x){jsetitem(x==null?null:new org.xdef.sys.SDatetime(x));}
  public void jsetitem(java.sql.Timestamp x){jsetitem(x==null?null:new org.xdef.sys.SDatetime(x));}
  public void jsetitem(java.util.Calendar x){jsetitem(x==null?null:new org.xdef.sys.SDatetime(x));}
  public void setjs$item(TJson.js$item x){_js$item=x;}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 1;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return -1;}
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	  if (doc.getDocumentElement()==null) doc.appendChild(el);
	}
	el.setAttributeNS(javax.xml.XMLConstants.XMLNS_ATTRIBUTE_NS_URI,
	  "xmlns:js", "http://www.w3.org/2005/xpath-functions");
	for (org.xdef.component.XComponent x: xGetNodeList())
	  el.appendChild(x.toXml(doc));
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	java.util.List<org.xdef.component.XComponent> a=
	  new java.util.ArrayList<org.xdef.component.XComponent>();
	org.xdef.component.XComponentUtil.addXC(a, getjs$item());
	return a;
  }
  public TJson() {}
  public TJson(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public TJson(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"27F0CF857F7BCA01B84005C023DFCBDB".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private TJson.js$item _js$item;
  public static final String XD_NAME="json";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "js:array";
  private String XD_NamespaceURI = "http://www.w3.org/2005/xpath-functions";
  private int XD_Index = -1;
  private int XD_ndx;
  private String XD_XPos;
  private String XD_Model="#json/js:array";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return new js$item(this, x);}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){
	x.xSetNodeIndex(XD_ndx++);
	setjs$item((js$item) x); //#json/js:array/js:item
  }
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
public static class js$item implements org.xdef.component.XComponent{
  public org.xdef.sys.SDatetime getvalue() {return _value;}
  public java.util.Date dateOfvalue(){return org.xdef.sys.SDatetime.getDate(_value);}
  public java.sql.Timestamp timestampOfvalue(){return org.xdef.sys.SDatetime.getTimestamp(_value);}
  public java.util.Calendar calendarOfvalue(){return org.xdef.sys.SDatetime.getCalendar(_value);}
  public void setvalue(org.xdef.sys.SDatetime x){_value=x;}
  public void setvalue(java.util.Date x){_value=x==null?null:new org.xdef.sys.SDatetime(x);}
  public void setvalue(java.sql.Timestamp x){_value=x==null?null:new org.xdef.sys.SDatetime(x);}
  public void setvalue(java.util.Calendar x){_value=x==null?null:new org.xdef.sys.SDatetime(x);}
  public String xposOfvalue(){return XD_XPos+"/@value";}
//<editor-fold defaultstate="collapsed" desc="Implementation of XComponent interface">
  public final static byte JSON = 1;
  @Override
  public org.w3c.dom.Element toXml()
	{return (org.w3c.dom.Element) toXml((org.w3c.dom.Document) null);}
  @Override
  public String xGetNodeName() {return XD_NodeName;}
  @Override
  public void xInit(org.xdef.component.XComponent p,
	String name, String ns, String xdPos) {
	XD_Parent=p; XD_NodeName=name; XD_NamespaceURI=ns; XD_Model=xdPos;
  }
  @Override
  public String xGetNamespaceURI() {return XD_NamespaceURI;}
  @Override
  public String xGetXPos() {return XD_XPos;}
  @Override
  public void xSetXPos(String xpos){XD_XPos = xpos;}
  @Override
  public int xGetNodeIndex() {return XD_Index;}
  @Override
  public void xSetNodeIndex(int index) {XD_Index = index;}
  @Override
  public org.xdef.component.XComponent xGetParent() {return XD_Parent;}
  @Override
  public Object xGetObject() {return XD_Object;}
  @Override
  public void xSetObject(final Object obj) {XD_Object = obj;}
  @Override
  public String toString() {return "XComponent: "+xGetModelPosition();}
  @Override
  public String xGetModelPosition() {return XD_Model;}
  @Override
  public int xGetModelIndex() {return 0;}
  @Override
  public org.w3c.dom.Node toXml(org.w3c.dom.Document doc) {
	org.w3c.dom.Element el;
	if (doc==null) {
	  doc = org.xdef.xml.KXmlUtils.newDocument(XD_NamespaceURI,
		XD_NodeName, null);
	  el = doc.getDocumentElement();
	} else {
	  el = doc.createElementNS(XD_NamespaceURI, XD_NodeName);
	}
	if (getvalue() != null)
	  el.setAttribute(XD_Name_value, getvalue().formatDate("y-MM-dd[Z]"));
	el.setAttributeNS(javax.xml.XMLConstants.XMLNS_ATTRIBUTE_NS_URI,
	  "xmlns:js", "http://www.w3.org/2005/xpath-functions");
	return el;
  }
  @Override
  public Object toJson() {return org.xdef.json.JsonUtil.xmlToJson(toXml());}
  @Override
  public java.util.List<org.xdef.component.XComponent> xGetNodeList() {
	return new java.util.ArrayList<org.xdef.component.XComponent>();
  }
  public js$item() {}
  public js$item(org.xdef.component.XComponent p,
	String name, String ns, String xPos, String XDPos) {
	XD_NodeName=name; XD_NamespaceURI=ns;
	XD_XPos=xPos;
	XD_Model=XDPos;
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
  }
  public js$item(org.xdef.component.XComponent p,org.xdef.proc.XXNode x){
	org.w3c.dom.Element el=x.getElement();
	XD_NodeName=el.getNodeName(); XD_NamespaceURI=el.getNamespaceURI();
	XD_XPos=x.getXPos();
	XD_Model=x.getXMElement().getXDPosition();
	XD_Object = (XD_Parent=p)!=null ? p.xGetObject() : null;
	if (!"A6495EBA29E09472570CCF8B44BE1E15".equals(
	  x.getXMElement().getDigest())) { //incompatible element model
	  throw new org.xdef.sys.SRuntimeException(
		org.xdef.msg.XDEF.XDEF374);
	}
  }
  private String XD_Name_value="value";
  private org.xdef.sys.SDatetime _value;
  public static final String XD_NAME="js:item";
  private org.xdef.component.XComponent XD_Parent;
  private Object XD_Object;
  private String XD_NodeName = "js:item";
  private String XD_NamespaceURI = "http://www.w3.org/2005/xpath-functions";
  private int XD_Index = -1;
  private String XD_XPos;
  private String XD_Model="#json/js:array/js:item";
  @Override
  public void xSetText(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){}
  @Override
  public void xSetAttr(org.xdef.proc.XXNode x,
	org.xdef.XDParseResult parseResult){
	XD_Name_value = x.getNodeName();
	setvalue(parseResult.getParsedValue().datetimeValue());
  }
  @Override
  public org.xdef.component.XComponent xCreateXChild(
	org.xdef.proc.XXNode x)
	{return null;}
  @Override
  public void xAddXChild(org.xdef.component.XComponent x){}
  @Override
  public void xSetAny(org.w3c.dom.Element el) {}
// </editor-fold>
}
}